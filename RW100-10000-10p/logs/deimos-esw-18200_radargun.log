2013-10-08 19:10:59,750 [main] INFO  [org.radargun.Slave] Attempting to connect to master 127.0.0.1:2103
2013-10-08 19:10:59,756 [main] INFO  [org.radargun.Slave] Successfully established connection with master at: 127.0.0.1:2103
2013-10-08 19:11:11,316 [pool-1-thread-1] INFO  [org.radargun.config.AnnotatedHelper] Loading JARS from /home/smf/github/radargun/target/distribution/RadarGun-1.1.0-SNAPSHOT/lib/radargun-framework-1.1.0-SNAPSHOT.jar
2013-10-08 19:11:11,457 [pool-1-thread-1] INFO  [org.radargun.config.AnnotatedHelper] Loading JARS from /home/smf/github/radargun/target/distribution/RadarGun-1.1.0-SNAPSHOT/lib/radargun-framework-1.1.0-SNAPSHOT.jar
2013-10-08 19:11:11,799 [pool-1-thread-1] INFO  [org.radargun.Slave] Executing stage: DestroyWrapper {enforceMemoryThrashHold=true, exitBenchmarkOnSlaveFailure=false, heapDumpDir=null, memoryThreshold=95, runOnAllSlaves=true, slaves=null, useSmartClassLoading=true }
2013-10-08 19:11:11,800 [pool-1-thread-1] INFO  [org.radargun.stages.DestroyWrapperStage] Received destroy cache wrapper request from master...
2013-10-08 19:11:11,800 [pool-1-thread-1] INFO  [org.radargun.stages.DestroyWrapperStage] No cache wrapper deployed on this slave, nothing to do.
2013-10-08 19:11:11,801 [pool-1-thread-1] INFO  [org.radargun.stages.DestroyWrapperStage] Before executing clear, memory looks like this: Memory - free: 2,928,638 kb - max:4,906,688 kb- total:2,944,000 kb
2013-10-08 19:11:11,958 [pool-1-thread-1] INFO  [org.radargun.stages.DestroyWrapperStage] After executing cleanup, memory looks like this: Memory - free: 2,935,311 kb - max:4,906,688 kb- total:2,944,064 kb
2013-10-08 19:11:11,978 [pool-1-thread-1] INFO  [org.radargun.Slave] Finished stage: DestroyWrapper {enforceMemoryThrashHold=true, exitBenchmarkOnSlaveFailure=false, heapDumpDir=null, memoryThreshold=95, runOnAllSlaves=true, slaves=null, useSmartClassLoading=true }
2013-10-08 19:11:11,979 [main] INFO  [org.radargun.Slave] Ack successfully sent to the master
2013-10-08 19:11:12,084 [pool-1-thread-1] INFO  [org.radargun.Slave] Executing stage: StartCluster {config=ispn52-repl-sync-rc.xml, delayAfterFirstSlaveStarts=5.000 secs, delayBetweenStartingSlaves=0.500 secs, exitBenchmarkOnSlaveFailure=true, expectNumSlaves=null, mayFailOn=null, reachable=null, runOnAllSlaves=false, slaves=null, staggerSlaveStartup=true, useSmartClassLoading=true, validateCluster=true }
2013-10-08 19:11:12,085 [pool-1-thread-1] INFO  [org.radargun.stages.StartClusterStage] Startup staggering, number of slaves to start is 12 This is the slave with index 0, not sleeping
2013-10-08 19:11:12,085 [pool-1-thread-1] INFO  [org.radargun.stages.StartClusterStage] Ack master's StartCluster stage. Local address is: /127.0.0.1. This slave's index is: 0
2013-10-08 19:11:12,106 [pool-1-thread-1] INFO  [org.radargun.utils.ClassLoadHelper] Creating newInstance org.radargun.cachewrappers.FFWrapperLF with classloader java.net.URLClassLoader@54266750
2013-10-08 19:11:12,164 [pool-1-thread-1] INFO  [org.radargun.cachewrappers.FFWrapperLF] config=ispn52-repl-sync-rc.xml, isLocal=false, nodeIndex=0, confAttributes={name=ispn52-repl-sync-rc.xml, decorate=infinispan52}
2013-10-08 19:11:12,216 [pool-1-thread-1] INFO  [org.radargun.cachewrappers.FFWrapperLF] Found fenix framework config options in 'rg-fenix-framework-config-options.properties'.
2013-10-08 19:11:12,216 [pool-1-thread-1] INFO  [org.radargun.cachewrappers.FFWrapperLF] Setting extra config properties for Fenix Framework.
2013-10-08 19:11:12,217 [pool-1-thread-1] INFO  [org.radargun.cachewrappers.FFWrapperLF] Will initialize Fenix Framework with RadarGunDataGridConfig
2013-10-08 19:11:12,219 [pool-1-thread-1] TRACE [pt.ist.fenixframework.FenixFramework] Static initializer block for FenixFramework class [BEGIN]
2013-10-08 19:11:12,219 [pool-1-thread-1] INFO  [pt.ist.fenixframework.FenixFramework] Trying auto-initialization with configuration by convention
2013-10-08 19:11:12,220 [pool-1-thread-1] INFO  [pt.ist.fenixframework.FenixFramework] Resource 'fenix-framework.properties' not found
2013-10-08 19:11:12,220 [pool-1-thread-1] DEBUG [pt.ist.fenixframework.FenixFramework] Fenix Framework properties after reading default config file:{}
2013-10-08 19:11:12,221 [pool-1-thread-1] DEBUG [pt.ist.fenixframework.FenixFramework] CurrentBackEndName = jvstm-lf
2013-10-08 19:11:12,221 [pool-1-thread-1] INFO  [pt.ist.fenixframework.FenixFramework] Resource 'fenix-framework-jvstm-lf.properties' not found
2013-10-08 19:11:12,222 [pool-1-thread-1] DEBUG [pt.ist.fenixframework.FenixFramework] Fenix Framework properties after reading backend config file:{}
2013-10-08 19:11:12,222 [pool-1-thread-1] DEBUG [pt.ist.fenixframework.FenixFramework] Fenix Framework properties after enforcing system properties:{}
2013-10-08 19:11:12,222 [pool-1-thread-1] INFO  [pt.ist.fenixframework.FenixFramework] Skipping configuration by convention.
2013-10-08 19:11:12,222 [pool-1-thread-1] TRACE [pt.ist.fenixframework.FenixFramework] Static initializer block for FenixFramework class [END]
2013-10-08 19:11:12,222 [pool-1-thread-1] INFO  [pt.ist.fenixframework.FenixFramework] Initializing Fenix Framework with config.class=pt.ist.fenixframework.backend.jvstm.datagrid.radargun.RadarGunDataGridConfig
2013-10-08 19:11:12,374 [pool-1-thread-1] INFO  [pt.ist.fenixframework.backend.jvstm.lf.JvstmLockFreeBackEnd] initializeTransactionFactory()
2013-10-08 19:11:12,410 [pool-1-thread-1] INFO  [pt.ist.fenixframework.backend.jvstm.lf.JvstmLockFreeBackEnd] initializeGroupCommunication()
2013-10-08 19:11:12,439 [pool-1-thread-1] INFO  [com.hazelcast.config.ClasspathXmlConfig] Configuring Hazelcast from 'hazelcast-ff.xml'.
2013-10-08 19:11:12,728 [pool-1-thread-1] INFO  [com.hazelcast.instance.DefaultAddressPicker] Interfaces is disabled, trying to pick one address from TCP-IP config addresses: [127.0.0.1]
2013-10-08 19:11:12,738 [pool-1-thread-1] INFO  [com.hazelcast.instance.DefaultAddressPicker] Picked Address[127.0.0.1]:5701, using socket ServerSocket[addr=/0.0.0.0,localport=5701], bind any local is true
2013-10-08 19:11:12,879 [pool-1-thread-1] INFO  [com.hazelcast.system] [127.0.0.1]:5701 [FenixFrameworkGroup] Hazelcast Community Edition 3.0.2 (20130906) starting at Address[127.0.0.1]:5701
2013-10-08 19:11:12,879 [pool-1-thread-1] INFO  [com.hazelcast.system] [127.0.0.1]:5701 [FenixFrameworkGroup] Copyright (C) 2008-2013 Hazelcast.com
2013-10-08 19:11:12,895 [pool-1-thread-1] INFO  [com.hazelcast.instance.Node] [127.0.0.1]:5701 [FenixFrameworkGroup] Creating MulticastJoiner
2013-10-08 19:11:12,898 [pool-1-thread-1] INFO  [com.hazelcast.core.LifecycleService] [127.0.0.1]:5701 [FenixFrameworkGroup] Address[127.0.0.1]:5701 is STARTING
2013-10-08 19:11:15,104 [pool-1-thread-1] INFO  [com.hazelcast.cluster.TcpIpJoiner] [127.0.0.1]:5701 [FenixFrameworkGroup] Connecting to possible member: Address[127.0.0.1]:5703
2013-10-08 19:11:15,107 [pool-1-thread-1] INFO  [com.hazelcast.cluster.TcpIpJoiner] [127.0.0.1]:5701 [FenixFrameworkGroup] Connecting to possible member: Address[127.0.0.1]:5702
2013-10-08 19:11:15,109 [hz._hzInstance_1_FenixFrameworkGroup.cached.thread-2] INFO  [com.hazelcast.nio.SocketConnector] [127.0.0.1]:5701 [FenixFrameworkGroup] Connecting to /127.0.0.1:5703, timeout: 0, bind-any: true
2013-10-08 19:11:15,109 [hz._hzInstance_1_FenixFrameworkGroup.cached.thread-3] INFO  [com.hazelcast.nio.SocketConnector] [127.0.0.1]:5701 [FenixFrameworkGroup] Connecting to /127.0.0.1:5702, timeout: 0, bind-any: true
2013-10-08 19:11:15,112 [hz._hzInstance_1_FenixFrameworkGroup.cached.thread-2] INFO  [com.hazelcast.nio.SocketConnector] [127.0.0.1]:5701 [FenixFrameworkGroup] Could not connect to: /127.0.0.1:5703. Reason: SocketException[Connection refused to address /127.0.0.1:5703]
2013-10-08 19:11:15,112 [hz._hzInstance_1_FenixFrameworkGroup.cached.thread-3] INFO  [com.hazelcast.nio.SocketConnector] [127.0.0.1]:5701 [FenixFrameworkGroup] Could not connect to: /127.0.0.1:5702. Reason: SocketException[Connection refused to address /127.0.0.1:5702]
2013-10-08 19:11:16,108 [pool-1-thread-1] INFO  [com.hazelcast.cluster.TcpIpJoiner] [127.0.0.1]:5701 [FenixFrameworkGroup] 


Members [1] {
	Member [127.0.0.1]:5701 this
}

2013-10-08 19:11:16,109 [pool-1-thread-1] INFO  [com.hazelcast.cluster.MulticastJoiner] [127.0.0.1]:5701 [FenixFrameworkGroup] 


Members [1] {
	Member [127.0.0.1]:5701 this
}

2013-10-08 19:11:16,155 [pool-1-thread-1] INFO  [com.hazelcast.core.LifecycleService] [127.0.0.1]:5701 [FenixFrameworkGroup] Address[127.0.0.1]:5701 is STARTED
2013-10-08 19:11:16,179 [pool-1-thread-1] INFO  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Initializing cluster partition table first arrangement...
2013-10-08 19:11:16,231 [pool-1-thread-1] INFO  [pt.ist.fenixframework.backend.jvstm.lf.LockFreeClusterUtils] Got (long) serverId: 0
2013-10-08 19:11:16,231 [pool-1-thread-1] INFO  [pt.ist.fenixframework.backend.jvstm.lf.JvstmLockFreeBackEnd] This is the first node!
2013-10-08 19:11:16,231 [pool-1-thread-1] INFO  [pt.ist.fenixframework.backend.jvstm.JVSTMBackEnd] initializeRepository()
2013-10-08 19:11:16,384 [pool-1-thread-1] INFO  [pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator] config=ispn52-repl-sync-rc.xml, isLocal=false, nodeIndex=0, confAttributes={name=ispn52-repl-sync-rc.xml}
2013-10-08 19:11:16,384 [pool-1-thread-1] INFO  [org.radargun.cachewrappers.InfinispanXSWrapper] Cannot find any site for slave index 0
2013-10-08 19:11:17,236 [pool-1-thread-1] INFO  [org.infinispan.remoting.transport.jgroups.JGroupsTransport] ISPN000078: Starting JGroups Channel
2013-10-08 19:11:17,817 [pool-1-thread-1] WARN  [org.jgroups.protocols.UDP] [JGRP00014] the send buffer of socket DatagramSocket was set to 640KB, but the OS only allocated 229.38KB. This might lead to performance problems. Please set your max send buffer in the OS correctly (e.g. net.core.wmem_max on Linux)
2013-10-08 19:11:17,817 [pool-1-thread-1] WARN  [org.jgroups.protocols.UDP] [JGRP00014] the receive buffer of socket DatagramSocket was set to 20MB, but the OS only allocated 229.38KB. This might lead to performance problems. Please set your max receive buffer in the OS correctly (e.g. net.core.rmem_max on Linux)
2013-10-08 19:11:17,818 [pool-1-thread-1] WARN  [org.jgroups.protocols.UDP] [JGRP00014] the send buffer of socket MulticastSocket was set to 640KB, but the OS only allocated 229.38KB. This might lead to performance problems. Please set your max send buffer in the OS correctly (e.g. net.core.wmem_max on Linux)
2013-10-08 19:11:17,818 [pool-1-thread-1] WARN  [org.jgroups.protocols.UDP] [JGRP00014] the receive buffer of socket MulticastSocket was set to 25MB, but the OS only allocated 229.38KB. This might lead to performance problems. Please set your max receive buffer in the OS correctly (e.g. net.core.rmem_max on Linux)
2013-10-08 19:11:20,848 [pool-1-thread-1] INFO  [org.infinispan.remoting.transport.jgroups.JGroupsTransport] ISPN000094: Received new cluster view: [deimos-esw-35246|0] [deimos-esw-35246]
2013-10-08 19:11:20,850 [pool-1-thread-1] INFO  [org.infinispan.remoting.transport.jgroups.JGroupsTransport] ISPN000079: Cache local address is deimos-esw-35246, physical addresses are [127.0.0.1:52000]
2013-10-08 19:11:20,857 [pool-1-thread-1] INFO  [org.infinispan.factories.GlobalComponentRegistry] ISPN000128: Infinispan version: Infinispan 'Delirium' 5.2.6.Final
2013-10-08 19:11:21,017 [pool-1-thread-1] INFO  [org.infinispan.transaction.lookup.JBossStandaloneJTAManagerLookup] ISPN000107: Retrieving transaction manager Transaction: unknown
2013-10-08 19:11:21,244 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-Acceptor] INFO  [com.hazelcast.nio.SocketAcceptor] [127.0.0.1]:5701 [FenixFrameworkGroup] Accepting socket connection from /127.0.0.1:59699
2013-10-08 19:11:21,257 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-Acceptor] INFO  [com.hazelcast.nio.TcpIpConnectionManager] [127.0.0.1]:5701 [FenixFrameworkGroup] 5701 accepted socket connection from /127.0.0.1:59699
2013-10-08 19:11:21,348 [pool-1-thread-1] INFO  [org.infinispan.jmx.CacheJmxRegistration] ISPN000031: MBeans were successfully registered to the platform MBean server.
2013-10-08 19:11:21,369 [pool-1-thread-1] INFO  [org.radargun.cachewrappers.InfinispanXSWrapper] Using transaction manager: Transaction: unknown
2013-10-08 19:11:21,370 [pool-1-thread-1] INFO  [org.radargun.cachewrappers.InfinispanXSWrapper] No RELAY2 protocol in XS wrapper
2013-10-08 19:11:21,374 [pool-1-thread-1] INFO  [org.radargun.cachewrappers.InfinispanXSWrapper] JGroups version: JGroups 3.2.7.Final
2013-10-08 19:11:21,375 [pool-1-thread-1] INFO  [org.radargun.cachewrappers.InfinispanXSWrapper] Using config attributes: {name=ispn52-repl-sync-rc.xml}
2013-10-08 19:11:21,514 [pool-1-thread-1] INFO  [pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository] Initialization marker not present. Data Grid is being initialized for the first time.
2013-10-08 19:11:21,528 [pool-1-thread-1] INFO  [pt.ist.fenixframework.backend.jvstm.JVSTMBackEnd] initializeDomainClassInfos
2013-10-08 19:11:21,530 [pool-1-thread-1] INFO  [pt.ist.fenixframework.backend.jvstm.pstm.DomainClassInfo] serverId: 0, serverOidBase: 0
2013-10-08 19:11:21,553 [pool-1-thread-1] INFO  [pt.ist.fenixframework.backend.jvstm.pstm.DomainClassInfo] Registering new domain class 'pt.ist.fenixframework.adt.bplustree.DomainLeafNode' with id '1'
2013-10-08 19:11:21,560 [pool-1-thread-1] INFO  [pt.ist.fenixframework.backend.jvstm.pstm.DomainClassInfo] Registering new domain class 'pt.ist.fenixframework.adt.bplustree.BPlusTreeArray' with id '2'
2013-10-08 19:11:21,561 [pool-1-thread-1] INFO  [pt.ist.fenixframework.backend.jvstm.pstm.DomainClassInfo] Registering new domain class 'pt.ist.fenixframework.adt.bplustree.DomainInnerNode' with id '3'
2013-10-08 19:11:21,561 [pool-1-thread-1] INFO  [pt.ist.fenixframework.backend.jvstm.pstm.DomainClassInfo] Registering new domain class 'pt.ist.fenixframework.adt.bplustree.LeafNode' with id '4'
2013-10-08 19:11:21,563 [pool-1-thread-1] INFO  [pt.ist.fenixframework.backend.jvstm.pstm.DomainClassInfo] Registering new domain class 'pt.ist.fenixframework.backend.jvstm.pstm.TransactionStatisticsEntry' with id '5'
2013-10-08 19:11:21,564 [pool-1-thread-1] INFO  [pt.ist.fenixframework.backend.jvstm.pstm.DomainClassInfo] Registering new domain class 'pt.ist.fenixframework.DomainRoot' with id '0'
2013-10-08 19:11:21,566 [pool-1-thread-1] INFO  [pt.ist.fenixframework.backend.jvstm.pstm.DomainClassInfo] Registering new domain class 'pt.ist.fenixframework.adt.linkedlist.ListNode' with id '6'
2013-10-08 19:11:21,570 [pool-1-thread-1] INFO  [pt.ist.fenixframework.backend.jvstm.pstm.DomainClassInfo] Registering new domain class 'pt.ist.fenixframework.adt.bplustree.BPlusTree' with id '7'
2013-10-08 19:11:21,571 [pool-1-thread-1] INFO  [pt.ist.fenixframework.backend.jvstm.pstm.DomainClassInfo] Registering new domain class 'pt.ist.fenixframework.adt.bplustree.InnerNode' with id '8'
2013-10-08 19:11:21,573 [pool-1-thread-1] INFO  [pt.ist.fenixframework.backend.jvstm.pstm.DomainClassInfo] Registering new domain class 'pt.ist.fenixframework.adt.linkedlist.LinkedList' with id '9'
2013-10-08 19:11:21,574 [pool-1-thread-1] INFO  [pt.ist.fenixframework.backend.jvstm.pstm.DomainClassInfo] Registering new domain class 'pt.ist.fenixframework.adt.bplustree.AbstractNodeArray' with id 'a'
2013-10-08 19:11:21,577 [pool-1-thread-1] INFO  [pt.ist.fenixframework.backend.jvstm.pstm.DomainClassInfo] Registering new domain class 'pt.ist.fenixframework.adt.bplustree.InnerNodeArray' with id 'b'
2013-10-08 19:11:21,579 [pool-1-thread-1] INFO  [pt.ist.fenixframework.backend.jvstm.pstm.DomainClassInfo] Registering new domain class 'pt.ist.fenixframework.adt.bplustree.LeafNodeArray' with id 'c'
2013-10-08 19:11:21,583 [pool-1-thread-1] INFO  [pt.ist.fenixframework.backend.jvstm.pstm.DomainClassInfo] Registering new domain class 'pt.ist.fenixframework.backend.jvstm.pstm.FenixFrameworkData' with id 'd'
2013-10-08 19:11:21,584 [pool-1-thread-1] INFO  [pt.ist.fenixframework.backend.jvstm.pstm.DomainClassInfo] Registering new domain class 'pt.ist.fenixframework.adt.bplustree.DomainBPlusTree' with id 'e'
2013-10-08 19:11:21,585 [pool-1-thread-1] INFO  [pt.ist.fenixframework.backend.jvstm.pstm.DomainClassInfo] Registering new domain class 'pt.ist.fenixframework.adt.bplustree.AbstractNode' with id 'f'
2013-10-08 19:11:21,587 [pool-1-thread-1] INFO  [pt.ist.fenixframework.backend.jvstm.JVSTMBackEnd] setupJVSTM
2013-10-08 19:11:21,588 [pool-1-thread-1] INFO  [jvstm.TransactionUtils] Setting the last committed TX number to 0
2013-10-08 19:11:21,589 [pool-1-thread-1] INFO  [pt.ist.fenixframework.backend.jvstm.JVSTMBackEnd] createDomainRootIfNeeded
2013-10-08 19:11:21,604 [pool-1-thread-1] WARN  [pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository] updateMaxCounterForClass() not yet implemented
2013-10-08 19:11:21,606 [pool-1-thread-1] INFO  [pt.ist.fenixframework.DomainRoot] Created DomainRoot instance
2013-10-08 19:11:21,629 [pool-1-thread-1] INFO  [pt.ist.fenixframework.backend.jvstm.JVSTMBackEnd] ensureFenixFrameworkDataExists
2013-10-08 19:11:21,632 [pool-1-thread-1] WARN  [pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository] updateMaxCounterForClass() not yet implemented
2013-10-08 19:11:21,633 [pool-1-thread-1] WARN  [pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository] updateMaxCounterForClass() not yet implemented
2013-10-08 19:11:21,638 [pool-1-thread-1] WARN  [pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository] updateMaxCounterForClass() not yet implemented
2013-10-08 19:11:21,658 [pool-1-thread-1] INFO  [pt.ist.fenixframework.backend.jvstm.lf.LockFreeClusterUtils] Notify other nodes that startup completed
2013-10-08 19:11:21,663 [pool-1-thread-1] INFO  [pt.ist.fenixframework.hibernatesearch.HibernateSearchConfig] Resource 'fenix-framework-hibernate-search.properties' not found. Hibernate Search disabled
2013-10-08 19:11:21,664 [pool-1-thread-1] INFO  [pt.ist.fenixframework.FenixFramework] Initialization of Fenix Framework is now complete.
2013-10-08 19:11:21,664 [pool-1-thread-1] INFO  [org.radargun.cachewrappers.FFWrapperLF] FF STARTED=true
2013-10-08 19:11:21,664 [pool-1-thread-1] INFO  [org.radargun.stages.helpers.StartHelper] Number of members=1 is not the one expected: 12
2013-10-08 19:11:22,329 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-Acceptor] INFO  [com.hazelcast.nio.SocketAcceptor] [127.0.0.1]:5701 [FenixFrameworkGroup] Accepting socket connection from /127.0.0.1:54623
2013-10-08 19:11:22,330 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-Acceptor] INFO  [com.hazelcast.nio.TcpIpConnectionManager] [127.0.0.1]:5701 [FenixFrameworkGroup] 5701 accepted socket connection from /127.0.0.1:54623
2013-10-08 19:11:22,664 [pool-1-thread-1] INFO  [org.radargun.stages.helpers.StartHelper] Number of members=1 is not the one expected: 12
2013-10-08 19:11:23,439 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-Acceptor] INFO  [com.hazelcast.nio.SocketAcceptor] [127.0.0.1]:5701 [FenixFrameworkGroup] Accepting socket connection from /127.0.0.1:60116
2013-10-08 19:11:23,441 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-Acceptor] INFO  [com.hazelcast.nio.TcpIpConnectionManager] [127.0.0.1]:5701 [FenixFrameworkGroup] 5701 accepted socket connection from /127.0.0.1:60116
2013-10-08 19:11:23,665 [pool-1-thread-1] INFO  [org.radargun.stages.helpers.StartHelper] Number of members=1 is not the one expected: 12
2013-10-08 19:11:24,562 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-Acceptor] INFO  [com.hazelcast.nio.SocketAcceptor] [127.0.0.1]:5701 [FenixFrameworkGroup] Accepting socket connection from /127.0.0.1:38778
2013-10-08 19:11:24,563 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-Acceptor] INFO  [com.hazelcast.nio.TcpIpConnectionManager] [127.0.0.1]:5701 [FenixFrameworkGroup] 5701 accepted socket connection from /127.0.0.1:38778
2013-10-08 19:11:24,666 [pool-1-thread-1] INFO  [org.radargun.stages.helpers.StartHelper] Number of members=1 is not the one expected: 12
2013-10-08 19:11:25,654 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-Acceptor] INFO  [com.hazelcast.nio.SocketAcceptor] [127.0.0.1]:5701 [FenixFrameworkGroup] Accepting socket connection from /127.0.0.1:47908
2013-10-08 19:11:25,655 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-Acceptor] INFO  [com.hazelcast.nio.TcpIpConnectionManager] [127.0.0.1]:5701 [FenixFrameworkGroup] 5701 accepted socket connection from /127.0.0.1:47908
2013-10-08 19:11:25,667 [pool-1-thread-1] INFO  [org.radargun.stages.helpers.StartHelper] Number of members=1 is not the one expected: 12
2013-10-08 19:11:26,668 [pool-1-thread-1] INFO  [org.radargun.stages.helpers.StartHelper] Number of members=1 is not the one expected: 12
2013-10-08 19:11:26,743 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-Acceptor] INFO  [com.hazelcast.nio.SocketAcceptor] [127.0.0.1]:5701 [FenixFrameworkGroup] Accepting socket connection from /127.0.0.1:57040
2013-10-08 19:11:26,744 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-Acceptor] INFO  [com.hazelcast.nio.TcpIpConnectionManager] [127.0.0.1]:5701 [FenixFrameworkGroup] 5701 accepted socket connection from /127.0.0.1:57040
2013-10-08 19:11:27,707 [pool-1-thread-1] INFO  [org.radargun.stages.helpers.StartHelper] Number of members=1 is not the one expected: 12
2013-10-08 19:11:27,870 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-Acceptor] INFO  [com.hazelcast.nio.SocketAcceptor] [127.0.0.1]:5701 [FenixFrameworkGroup] Accepting socket connection from /127.0.0.1:42023
2013-10-08 19:11:27,875 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-Acceptor] INFO  [com.hazelcast.nio.TcpIpConnectionManager] [127.0.0.1]:5701 [FenixFrameworkGroup] 5701 accepted socket connection from /127.0.0.1:42023
2013-10-08 19:11:28,708 [pool-1-thread-1] INFO  [org.radargun.stages.helpers.StartHelper] Number of members=1 is not the one expected: 12
2013-10-08 19:11:28,948 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-Acceptor] INFO  [com.hazelcast.nio.SocketAcceptor] [127.0.0.1]:5701 [FenixFrameworkGroup] Accepting socket connection from /127.0.0.1:53596
2013-10-08 19:11:28,949 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-Acceptor] INFO  [com.hazelcast.nio.TcpIpConnectionManager] [127.0.0.1]:5701 [FenixFrameworkGroup] 5701 accepted socket connection from /127.0.0.1:53596
2013-10-08 19:11:29,709 [pool-1-thread-1] INFO  [org.radargun.stages.helpers.StartHelper] Number of members=1 is not the one expected: 12
2013-10-08 19:11:30,048 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-Acceptor] INFO  [com.hazelcast.nio.SocketAcceptor] [127.0.0.1]:5701 [FenixFrameworkGroup] Accepting socket connection from /127.0.0.1:38234
2013-10-08 19:11:30,049 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-Acceptor] INFO  [com.hazelcast.nio.TcpIpConnectionManager] [127.0.0.1]:5701 [FenixFrameworkGroup] 5701 accepted socket connection from /127.0.0.1:38234
2013-10-08 19:11:30,710 [pool-1-thread-1] INFO  [org.radargun.stages.helpers.StartHelper] Number of members=1 is not the one expected: 12
2013-10-08 19:11:31,170 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-Acceptor] INFO  [com.hazelcast.nio.SocketAcceptor] [127.0.0.1]:5701 [FenixFrameworkGroup] Accepting socket connection from /127.0.0.1:40259
2013-10-08 19:11:31,171 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-Acceptor] INFO  [com.hazelcast.nio.TcpIpConnectionManager] [127.0.0.1]:5701 [FenixFrameworkGroup] 5701 accepted socket connection from /127.0.0.1:40259
2013-10-08 19:11:31,711 [pool-1-thread-1] INFO  [org.radargun.stages.helpers.StartHelper] Number of members=1 is not the one expected: 12
2013-10-08 19:11:32,270 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-Acceptor] INFO  [com.hazelcast.nio.SocketAcceptor] [127.0.0.1]:5701 [FenixFrameworkGroup] Accepting socket connection from /127.0.0.1:46333
2013-10-08 19:11:32,271 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-Acceptor] INFO  [com.hazelcast.nio.TcpIpConnectionManager] [127.0.0.1]:5701 [FenixFrameworkGroup] 5701 accepted socket connection from /127.0.0.1:46333
2013-10-08 19:11:32,711 [pool-1-thread-1] INFO  [org.radargun.stages.helpers.StartHelper] Number of members=1 is not the one expected: 12
2013-10-08 19:11:33,712 [pool-1-thread-1] INFO  [org.radargun.stages.helpers.StartHelper] Number of members=1 is not the one expected: 12
2013-10-08 19:11:34,713 [pool-1-thread-1] INFO  [org.radargun.stages.helpers.StartHelper] Number of members=1 is not the one expected: 12
2013-10-08 19:11:35,713 [pool-1-thread-1] INFO  [org.radargun.stages.helpers.StartHelper] Number of members=1 is not the one expected: 12
2013-10-08 19:11:36,714 [pool-1-thread-1] INFO  [org.radargun.stages.helpers.StartHelper] Number of members=1 is not the one expected: 12
2013-10-08 19:11:37,715 [pool-1-thread-1] INFO  [org.radargun.stages.helpers.StartHelper] Number of members=1 is not the one expected: 12
2013-10-08 19:11:38,405 [hz._hzInstance_1_FenixFrameworkGroup.migration] INFO  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Re-partitioning cluster data... Migration queue size: 249
2013-10-08 19:11:38,477 [hz._hzInstance_1_FenixFrameworkGroup.migration] INFO  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Re-partitioning cluster data... Migration queue size: 249
2013-10-08 19:11:38,505 [hz._hzInstance_1_FenixFrameworkGroup.migration] INFO  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Re-partitioning cluster data... Migration queue size: 249
2013-10-08 19:11:38,528 [hz._hzInstance_1_FenixFrameworkGroup.migration] INFO  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Re-partitioning cluster data... Migration queue size: 249
2013-10-08 19:11:38,548 [hz._hzInstance_1_FenixFrameworkGroup.migration] INFO  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Re-partitioning cluster data... Migration queue size: 249
2013-10-08 19:11:38,564 [hz._hzInstance_1_FenixFrameworkGroup.migration] INFO  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Re-partitioning cluster data... Migration queue size: 249
2013-10-08 19:11:38,576 [hz._hzInstance_1_FenixFrameworkGroup.migration] INFO  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Re-partitioning cluster data... Migration queue size: 249
2013-10-08 19:11:38,588 [hz._hzInstance_1_FenixFrameworkGroup.migration] INFO  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Re-partitioning cluster data... Migration queue size: 249
2013-10-08 19:11:38,598 [hz._hzInstance_1_FenixFrameworkGroup.migration] INFO  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Re-partitioning cluster data... Migration queue size: 249
2013-10-08 19:11:38,600 [hz._hzInstance_1_FenixFrameworkGroup.cached.thread-3] INFO  [com.hazelcast.cluster.ClusterService] [127.0.0.1]:5701 [FenixFrameworkGroup] 

Members [12] {
	Member [127.0.0.1]:5701 this
	Member [127.0.0.1]:5702
	Member [127.0.0.1]:5704
	Member [127.0.0.1]:5705
	Member [127.0.0.1]:5706
	Member [127.0.0.1]:5703
	Member [127.0.0.1]:5707
	Member [127.0.0.1]:5708
	Member [127.0.0.1]:5709
	Member [127.0.0.1]:5710
	Member [127.0.0.1]:5711
	Member [127.0.0.1]:5712
}

2013-10-08 19:11:38,608 [hz._hzInstance_1_FenixFrameworkGroup.migration] INFO  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Re-partitioning cluster data... Migration queue size: 249
2013-10-08 19:11:38,617 [hz._hzInstance_1_FenixFrameworkGroup.migration] INFO  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Re-partitioning cluster data... Migration queue size: 249
2013-10-08 19:11:38,716 [pool-1-thread-1] INFO  [org.radargun.stages.helpers.StartHelper] Number of members is the one expected: 12
2013-10-08 19:11:38,716 [pool-1-thread-1] INFO  [org.radargun.stages.StartClusterStage] Successfully started cache wrapper on slave 0: org.radargun.cachewrappers.FFWrapperLF@33cdefce
2013-10-08 19:11:38,721 [pool-1-thread-1] INFO  [org.radargun.Slave] Finished stage: StartCluster {config=ispn52-repl-sync-rc.xml, delayAfterFirstSlaveStarts=5.000 secs, delayBetweenStartingSlaves=0.500 secs, exitBenchmarkOnSlaveFailure=true, expectNumSlaves=null, mayFailOn=null, reachable=null, runOnAllSlaves=false, slaves=null, staggerSlaveStartup=true, useSmartClassLoading=true, validateCluster=true }
2013-10-08 19:11:38,722 [main] INFO  [org.radargun.Slave] Ack successfully sent to the master
2013-10-08 19:11:39,837 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [0]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5705
} -VS- MigrationInfo{ partitionId=0, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,841 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=0, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [0]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5705
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=0, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [0]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5705
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:39,845 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=0, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,850 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [1]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5703
} -VS- MigrationInfo{ partitionId=1, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,852 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=1, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [1]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5703
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=1, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [1]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5703
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:39,855 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=1, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,860 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [2]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5704
} -VS- MigrationInfo{ partitionId=2, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,861 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=2, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [2]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5704
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=2, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [2]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5704
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:39,863 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=2, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,868 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [3]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5701
} -VS- MigrationInfo{ partitionId=3, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,869 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=3, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [3]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5701
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=3, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [3]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5701
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:39,872 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=3, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,877 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [4]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5703
} -VS- MigrationInfo{ partitionId=4, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,878 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=4, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [4]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5703
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=4, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [4]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5703
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:39,880 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=4, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,885 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [5]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5703
} -VS- MigrationInfo{ partitionId=5, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,886 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=5, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [5]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5703
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=5, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [5]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5703
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:39,889 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=5, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,894 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [6]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5710
} -VS- MigrationInfo{ partitionId=6, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,895 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=6, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [6]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5710
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=6, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [6]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5710
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:39,897 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=6, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,902 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [7]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5711
} -VS- MigrationInfo{ partitionId=7, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,903 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=7, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [7]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5711
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=7, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [7]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5711
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:39,906 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=7, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,910 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [8]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5705
} -VS- MigrationInfo{ partitionId=8, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,911 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=8, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [8]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5705
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=8, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [8]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5705
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:39,914 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=8, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,919 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [9]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5711
} -VS- MigrationInfo{ partitionId=9, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,920 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=9, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [9]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5711
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=9, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [9]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5711
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:39,922 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=9, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,927 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [10]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5701
} -VS- MigrationInfo{ partitionId=10, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,928 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=10, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [10]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5701
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=10, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [10]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5701
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:39,931 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=10, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,936 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [11]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5702
} -VS- MigrationInfo{ partitionId=11, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,937 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=11, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [11]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5702
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=11, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [11]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5702
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:39,939 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=11, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,943 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [12]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5702
} -VS- MigrationInfo{ partitionId=12, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,944 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=12, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [12]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5702
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=12, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [12]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5702
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:39,946 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=12, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,950 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [13]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5712
} -VS- MigrationInfo{ partitionId=13, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,951 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=13, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [13]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5712
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=13, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [13]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5712
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:39,953 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=13, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,957 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [14]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5709
} -VS- MigrationInfo{ partitionId=14, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,958 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=14, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [14]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5709
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=14, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [14]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5709
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:39,960 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=14, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,964 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [15]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5705
} -VS- MigrationInfo{ partitionId=15, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,965 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=15, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [15]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5705
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=15, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [15]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5705
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:39,967 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=15, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,971 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [16]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5709
} -VS- MigrationInfo{ partitionId=16, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,971 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=16, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [16]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5709
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=16, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [16]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5709
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:39,973 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=16, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,977 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [17]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5706
} -VS- MigrationInfo{ partitionId=17, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,978 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=17, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [17]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5706
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=17, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [17]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5706
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:39,980 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=17, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,984 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [18]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5707
} -VS- MigrationInfo{ partitionId=18, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,985 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=18, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [18]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5707
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=18, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [18]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5707
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:39,987 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=18, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,991 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [19]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5706
} -VS- MigrationInfo{ partitionId=19, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,992 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=19, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [19]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5706
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=19, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [19]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5706
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:39,995 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=19, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:39,999 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [20]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5710
} -VS- MigrationInfo{ partitionId=20, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,000 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=20, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [20]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5710
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=20, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [20]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5710
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,002 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=20, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,006 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [21]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5704
} -VS- MigrationInfo{ partitionId=21, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,008 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=21, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [21]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5704
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=21, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [21]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5704
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,009 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=21, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,014 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [22]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5711
} -VS- MigrationInfo{ partitionId=22, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,015 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=22, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [22]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5711
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=22, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [22]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5711
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,016 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=22, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,020 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [23]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5712
} -VS- MigrationInfo{ partitionId=23, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,021 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=23, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [23]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5712
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=23, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [23]{
	0:Address[127.0.0.1]:5708
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5712
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,023 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=23, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5708, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,027 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [24]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5706
} -VS- MigrationInfo{ partitionId=24, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,028 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=24, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [24]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5706
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=24, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [24]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5706
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,030 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=24, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,034 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [25]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5708
} -VS- MigrationInfo{ partitionId=25, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,035 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=25, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [25]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5708
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=25, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [25]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5708
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,037 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=25, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,041 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [26]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5706
} -VS- MigrationInfo{ partitionId=26, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,042 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=26, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [26]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5706
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=26, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [26]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5706
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,044 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=26, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,048 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [27]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5712
} -VS- MigrationInfo{ partitionId=27, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,049 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=27, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [27]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5712
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=27, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [27]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5712
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,051 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=27, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,055 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [28]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5711
} -VS- MigrationInfo{ partitionId=28, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,056 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=28, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [28]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5711
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=28, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [28]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5711
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,057 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=28, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,061 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [29]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5709
} -VS- MigrationInfo{ partitionId=29, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,062 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=29, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [29]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5709
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=29, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [29]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5709
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,064 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=29, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,069 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [30]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5702
} -VS- MigrationInfo{ partitionId=30, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,070 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=30, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [30]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5702
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=30, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [30]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5702
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,072 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=30, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,076 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [31]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5708
} -VS- MigrationInfo{ partitionId=31, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,077 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=31, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [31]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5708
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=31, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [31]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5708
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,079 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=31, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,083 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [32]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5711
} -VS- MigrationInfo{ partitionId=32, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,084 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=32, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [32]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5711
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=32, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [32]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5711
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,085 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=32, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,089 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [33]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5705
} -VS- MigrationInfo{ partitionId=33, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,090 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=33, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [33]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5705
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=33, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [33]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5705
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,092 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=33, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,096 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [34]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5709
} -VS- MigrationInfo{ partitionId=34, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,097 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=34, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [34]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5709
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=34, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [34]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5709
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,099 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=34, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,103 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [35]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5701
} -VS- MigrationInfo{ partitionId=35, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,104 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=35, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [35]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5701
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=35, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [35]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5701
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,105 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=35, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,110 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [36]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5705
} -VS- MigrationInfo{ partitionId=36, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,111 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=36, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [36]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5705
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=36, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [36]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5705
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,112 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=36, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,117 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [37]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5702
} -VS- MigrationInfo{ partitionId=37, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,118 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=37, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [37]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5702
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=37, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [37]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5702
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,119 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=37, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,123 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [38]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5706
} -VS- MigrationInfo{ partitionId=38, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,124 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=38, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [38]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5706
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=38, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [38]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5706
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,126 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=38, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,130 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [39]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5704
} -VS- MigrationInfo{ partitionId=39, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,131 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=39, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [39]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5704
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=39, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [39]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5704
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,134 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=39, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,138 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [40]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5710
} -VS- MigrationInfo{ partitionId=40, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,139 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=40, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [40]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5710
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=40, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [40]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5710
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,140 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=40, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,144 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [41]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5706
} -VS- MigrationInfo{ partitionId=41, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,146 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=41, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [41]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5706
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=41, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [41]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5706
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,147 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=41, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,151 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [42]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5704
} -VS- MigrationInfo{ partitionId=42, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,152 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=42, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [42]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5704
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=42, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [42]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5704
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,154 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=42, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,158 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [43]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5709
} -VS- MigrationInfo{ partitionId=43, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,159 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=43, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [43]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5709
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=43, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [43]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5709
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,160 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=43, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,164 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [44]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5709
} -VS- MigrationInfo{ partitionId=44, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,165 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=44, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [44]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5709
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=44, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [44]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5709
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,167 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=44, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,171 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [45]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5703
} -VS- MigrationInfo{ partitionId=45, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,172 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=45, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [45]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5703
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=45, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [45]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5703
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,174 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=45, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,178 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [46]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5706
} -VS- MigrationInfo{ partitionId=46, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,179 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=46, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [46]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5706
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=46, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [46]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5706
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,180 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=46, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,184 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [47]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5701
} -VS- MigrationInfo{ partitionId=47, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,185 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=47, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [47]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5701
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=47, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [47]{
	0:Address[127.0.0.1]:5707
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5701
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,187 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=47, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5707, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,191 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [48]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5703
} -VS- MigrationInfo{ partitionId=48, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,192 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=48, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [48]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5703
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=48, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [48]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5703
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,194 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=48, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,198 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [49]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5711
} -VS- MigrationInfo{ partitionId=49, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,199 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=49, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [49]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5711
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=49, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [49]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5711
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,201 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=49, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,205 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [50]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5701
} -VS- MigrationInfo{ partitionId=50, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,206 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=50, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [50]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5701
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=50, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [50]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5701
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,207 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=50, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,211 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [51]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5705
} -VS- MigrationInfo{ partitionId=51, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,212 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=51, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [51]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5705
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=51, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [51]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5705
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,214 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=51, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,218 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [52]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5712
} -VS- MigrationInfo{ partitionId=52, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,219 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=52, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [52]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5712
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=52, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [52]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5712
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,220 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=52, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,224 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [53]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5708
} -VS- MigrationInfo{ partitionId=53, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,225 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=53, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [53]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5708
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=53, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [53]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5708
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,227 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=53, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,231 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [54]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5701
} -VS- MigrationInfo{ partitionId=54, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,232 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=54, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [54]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5701
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=54, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [54]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5701
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,234 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=54, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,238 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [55]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5704
} -VS- MigrationInfo{ partitionId=55, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,239 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=55, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [55]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5704
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=55, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [55]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5704
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,240 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=55, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,244 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [56]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5702
} -VS- MigrationInfo{ partitionId=56, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,245 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=56, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [56]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5702
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=56, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [56]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5702
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,247 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=56, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,251 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [57]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5702
} -VS- MigrationInfo{ partitionId=57, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,252 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=57, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [57]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5702
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=57, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [57]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5702
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,254 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=57, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,258 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [58]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5711
} -VS- MigrationInfo{ partitionId=58, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,259 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=58, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [58]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5711
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=58, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [58]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5711
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,260 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=58, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,264 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [59]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5707
} -VS- MigrationInfo{ partitionId=59, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,265 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=59, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [59]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5707
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=59, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [59]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5707
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,267 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=59, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,271 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [60]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5709
} -VS- MigrationInfo{ partitionId=60, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,272 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=60, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [60]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5709
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=60, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [60]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5709
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,274 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=60, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,278 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [61]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5708
} -VS- MigrationInfo{ partitionId=61, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,279 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=61, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [61]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5708
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=61, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [61]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5708
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,280 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=61, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,284 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [62]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5707
} -VS- MigrationInfo{ partitionId=62, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,285 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=62, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [62]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5707
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=62, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [62]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5707
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,287 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=62, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,291 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [63]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5712
} -VS- MigrationInfo{ partitionId=63, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,292 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=63, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [63]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5712
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=63, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [63]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5712
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,293 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=63, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,297 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [64]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5705
} -VS- MigrationInfo{ partitionId=64, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,298 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=64, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [64]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5705
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=64, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [64]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5705
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,300 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=64, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,304 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [65]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5701
} -VS- MigrationInfo{ partitionId=65, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,305 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=65, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [65]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5701
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=65, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [65]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5701
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,307 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=65, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,311 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [66]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5712
} -VS- MigrationInfo{ partitionId=66, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,312 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=66, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [66]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5712
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=66, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [66]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5712
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,313 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=66, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,317 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [67]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5710
} -VS- MigrationInfo{ partitionId=67, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,318 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=67, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [67]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5710
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=67, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [67]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5710
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,320 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=67, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,324 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [68]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5711
} -VS- MigrationInfo{ partitionId=68, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,325 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=68, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [68]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5711
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=68, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [68]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5711
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,327 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=68, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,331 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [69]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5710
} -VS- MigrationInfo{ partitionId=69, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,332 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=69, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [69]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5710
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=69, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [69]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5710
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,333 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=69, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,337 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [70]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5704
} -VS- MigrationInfo{ partitionId=70, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,338 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=70, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [70]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5704
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=70, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [70]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5704
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,340 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=70, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,344 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [71]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5712
} -VS- MigrationInfo{ partitionId=71, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,345 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=71, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [71]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5712
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=71, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [71]{
	0:Address[127.0.0.1]:5706
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5712
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,347 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=71, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5706, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,351 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [72]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5707
} -VS- MigrationInfo{ partitionId=72, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,352 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=72, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [72]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5707
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=72, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [72]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5707
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,354 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=72, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,358 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [73]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5702
} -VS- MigrationInfo{ partitionId=73, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,359 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=73, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [73]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5702
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=73, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [73]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5702
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,360 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=73, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,364 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [74]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5710
} -VS- MigrationInfo{ partitionId=74, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,365 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=74, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [74]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5710
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=74, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [74]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5710
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,367 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=74, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,371 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [75]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5704
} -VS- MigrationInfo{ partitionId=75, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,372 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=75, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [75]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5704
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=75, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [75]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5704
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,373 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=75, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,377 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [76]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5703
} -VS- MigrationInfo{ partitionId=76, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,378 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=76, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [76]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5703
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=76, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [76]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5703
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,380 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=76, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,384 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [77]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5702
} -VS- MigrationInfo{ partitionId=77, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,385 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=77, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [77]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5702
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=77, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [77]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5702
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,386 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=77, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,390 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [78]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5710
} -VS- MigrationInfo{ partitionId=78, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,391 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=78, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [78]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5710
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=78, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [78]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5710
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,393 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=78, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,397 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [79]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5707
} -VS- MigrationInfo{ partitionId=79, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,398 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=79, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [79]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5707
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=79, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [79]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5707
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,400 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=79, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,404 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [80]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5709
} -VS- MigrationInfo{ partitionId=80, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,404 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=80, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [80]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5709
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=80, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [80]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5709
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,406 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=80, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,410 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [81]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5712
} -VS- MigrationInfo{ partitionId=81, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,411 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=81, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [81]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5712
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=81, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [81]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5712
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,413 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=81, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,417 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [82]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5709
} -VS- MigrationInfo{ partitionId=82, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,418 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=82, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [82]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5709
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=82, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [82]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5709
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,419 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=82, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,423 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [83]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5701
} -VS- MigrationInfo{ partitionId=83, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,424 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=83, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [83]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5701
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=83, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [83]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5701
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,426 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=83, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,430 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [84]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5712
} -VS- MigrationInfo{ partitionId=84, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,431 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=84, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [84]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5712
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=84, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [84]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5712
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,432 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=84, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,436 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [85]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5703
} -VS- MigrationInfo{ partitionId=85, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,437 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=85, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [85]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5703
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=85, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [85]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5703
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,439 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=85, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,443 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [86]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5702
} -VS- MigrationInfo{ partitionId=86, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,444 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=86, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [86]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5702
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=86, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [86]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5702
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,445 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=86, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,449 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [87]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5706
} -VS- MigrationInfo{ partitionId=87, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,450 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=87, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [87]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5706
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=87, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [87]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5706
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,452 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=87, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,456 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [88]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5701
} -VS- MigrationInfo{ partitionId=88, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,457 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=88, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [88]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5701
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=88, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [88]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5701
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,458 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=88, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,462 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [89]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5710
} -VS- MigrationInfo{ partitionId=89, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,463 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=89, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [89]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5710
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=89, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [89]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5710
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,465 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=89, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,469 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [90]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5707
} -VS- MigrationInfo{ partitionId=90, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,470 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=90, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [90]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5707
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=90, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [90]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5707
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,472 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=90, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,476 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [91]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5711
} -VS- MigrationInfo{ partitionId=91, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,477 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=91, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [91]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5711
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=91, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [91]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5711
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,478 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=91, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,482 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [92]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5712
} -VS- MigrationInfo{ partitionId=92, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,483 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=92, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [92]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5712
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=92, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [92]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5712
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,485 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=92, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,489 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [93]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5709
} -VS- MigrationInfo{ partitionId=93, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,490 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=93, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [93]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5709
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=93, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [93]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5709
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,492 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=93, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,496 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [94]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5707
} -VS- MigrationInfo{ partitionId=94, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,497 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=94, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [94]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5707
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=94, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [94]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5707
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,498 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=94, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,502 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [95]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5707
} -VS- MigrationInfo{ partitionId=95, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,503 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=95, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [95]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5707
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=95, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [95]{
	0:Address[127.0.0.1]:5705
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5707
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,505 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=95, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5705, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,509 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [96]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5706
} -VS- MigrationInfo{ partitionId=96, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,510 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=96, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [96]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5706
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=96, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [96]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5706
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,512 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=96, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,516 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [97]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5702
} -VS- MigrationInfo{ partitionId=97, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,517 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=97, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [97]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5702
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=97, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [97]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5702
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,518 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=97, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,522 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [98]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5711
} -VS- MigrationInfo{ partitionId=98, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,523 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=98, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [98]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5711
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=98, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [98]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5711
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,525 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=98, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,529 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [99]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5708
} -VS- MigrationInfo{ partitionId=99, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,530 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=99, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [99]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5708
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=99, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [99]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5708
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,531 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=99, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,535 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [100]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5708
} -VS- MigrationInfo{ partitionId=100, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,536 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=100, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [100]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5708
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=100, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [100]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5708
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,538 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=100, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,542 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [101]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5706
} -VS- MigrationInfo{ partitionId=101, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,543 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=101, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [101]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5706
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=101, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [101]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5706
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,545 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=101, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,548 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [102]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5708
} -VS- MigrationInfo{ partitionId=102, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,549 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=102, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [102]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5708
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=102, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [102]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5708
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,551 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=102, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,555 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [103]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5704
} -VS- MigrationInfo{ partitionId=103, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,556 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=103, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [103]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5704
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=103, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [103]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5704
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,558 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=103, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,562 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [104]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5704
} -VS- MigrationInfo{ partitionId=104, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,562 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=104, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [104]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5704
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=104, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [104]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5704
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,564 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=104, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,568 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [105]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5708
} -VS- MigrationInfo{ partitionId=105, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,569 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=105, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [105]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5708
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=105, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [105]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5708
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,571 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=105, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,574 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [106]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5705
} -VS- MigrationInfo{ partitionId=106, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,575 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=106, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [106]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5705
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=106, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [106]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5705
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,577 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=106, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,581 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [107]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5704
} -VS- MigrationInfo{ partitionId=107, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,582 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=107, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [107]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5704
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=107, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [107]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5704
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,584 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=107, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,587 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [108]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5708
} -VS- MigrationInfo{ partitionId=108, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,588 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=108, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [108]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5708
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=108, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [108]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5708
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,590 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=108, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,594 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [109]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5701
} -VS- MigrationInfo{ partitionId=109, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,595 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=109, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [109]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5701
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=109, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [109]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5701
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,597 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=109, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,601 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [110]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5705
} -VS- MigrationInfo{ partitionId=110, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,602 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=110, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [110]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5705
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=110, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [110]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5705
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,603 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=110, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,607 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [111]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5709
} -VS- MigrationInfo{ partitionId=111, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,608 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=111, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [111]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5709
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=111, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [111]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5709
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,610 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=111, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,614 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [112]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5707
} -VS- MigrationInfo{ partitionId=112, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,615 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=112, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [112]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5707
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=112, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [112]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5707
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,616 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=112, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,620 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [113]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5711
} -VS- MigrationInfo{ partitionId=113, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,621 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=113, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [113]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5711
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=113, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [113]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5711
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,623 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=113, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,627 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [114]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5708
} -VS- MigrationInfo{ partitionId=114, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,628 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=114, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [114]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5708
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=114, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [114]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5708
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,630 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=114, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,634 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [115]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5701
} -VS- MigrationInfo{ partitionId=115, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,635 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=115, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [115]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5701
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=115, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [115]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5701
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,636 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=115, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,640 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [116]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5712
} -VS- MigrationInfo{ partitionId=116, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,641 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=116, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [116]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5712
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=116, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [116]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5712
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,643 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=116, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,647 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [117]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5709
} -VS- MigrationInfo{ partitionId=117, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,648 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=117, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [117]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5709
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=117, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [117]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5709
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,650 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=117, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,654 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [118]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5702
} -VS- MigrationInfo{ partitionId=118, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,655 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=118, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [118]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5702
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=118, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [118]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5702
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,656 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=118, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,660 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [119]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5706
} -VS- MigrationInfo{ partitionId=119, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,661 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=119, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [119]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5706
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=119, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [119]{
	0:Address[127.0.0.1]:5712
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5706
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,663 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=119, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5712, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,667 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [120]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5701
} -VS- MigrationInfo{ partitionId=120, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,668 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=120, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [120]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5701
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=120, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [120]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5701
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,669 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=120, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,673 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [121]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5711
} -VS- MigrationInfo{ partitionId=121, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,674 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=121, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [121]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5711
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=121, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [121]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5711
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,676 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=121, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,680 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [122]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5712
} -VS- MigrationInfo{ partitionId=122, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,681 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=122, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [122]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5712
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=122, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [122]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5712
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,682 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=122, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,686 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [123]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5701
} -VS- MigrationInfo{ partitionId=123, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,687 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=123, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [123]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5701
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=123, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [123]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5701
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,689 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=123, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,693 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [124]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5709
} -VS- MigrationInfo{ partitionId=124, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,694 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=124, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [124]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5709
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=124, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [124]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5709
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,695 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=124, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,699 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [125]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5709
} -VS- MigrationInfo{ partitionId=125, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,700 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=125, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [125]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5709
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=125, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [125]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5709
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,702 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=125, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,706 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [126]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5707
} -VS- MigrationInfo{ partitionId=126, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,707 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=126, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [126]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5707
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=126, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [126]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5707
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,708 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=126, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,712 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [127]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5710
} -VS- MigrationInfo{ partitionId=127, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,713 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=127, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [127]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5710
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=127, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [127]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5710
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,715 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=127, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,719 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [128]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5702
} -VS- MigrationInfo{ partitionId=128, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,719 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=128, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [128]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5702
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=128, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [128]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5702
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,721 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=128, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,725 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [129]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5706
} -VS- MigrationInfo{ partitionId=129, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,726 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=129, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [129]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5706
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=129, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [129]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5706
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,728 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=129, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,732 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [130]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5706
} -VS- MigrationInfo{ partitionId=130, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,733 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=130, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [130]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5706
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=130, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [130]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5706
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,734 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=130, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,738 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [131]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5708
} -VS- MigrationInfo{ partitionId=131, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,739 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=131, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [131]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5708
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=131, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [131]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5708
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,740 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=131, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,744 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [132]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5703
} -VS- MigrationInfo{ partitionId=132, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,745 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=132, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [132]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5703
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=132, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [132]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5703
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,747 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=132, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,751 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [133]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5707
} -VS- MigrationInfo{ partitionId=133, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,752 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=133, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [133]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5707
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=133, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [133]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5707
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,753 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=133, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,757 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [134]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5708
} -VS- MigrationInfo{ partitionId=134, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,758 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=134, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [134]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5708
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=134, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [134]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5708
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,760 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=134, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,764 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [135]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5703
} -VS- MigrationInfo{ partitionId=135, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,765 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=135, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [135]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5703
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=135, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [135]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5703
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,766 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=135, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,770 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [136]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5706
} -VS- MigrationInfo{ partitionId=136, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,771 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=136, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [136]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5706
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=136, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [136]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5706
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,773 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=136, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,777 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [137]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5709
} -VS- MigrationInfo{ partitionId=137, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,778 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=137, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [137]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5709
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=137, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [137]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5709
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,779 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=137, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,783 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [138]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5701
} -VS- MigrationInfo{ partitionId=138, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,784 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=138, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [138]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5701
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=138, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [138]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5701
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,786 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=138, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,790 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [139]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5708
} -VS- MigrationInfo{ partitionId=139, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,791 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=139, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [139]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5708
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=139, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [139]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5708
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,792 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=139, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,796 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [140]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5701
} -VS- MigrationInfo{ partitionId=140, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,797 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=140, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [140]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5701
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=140, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [140]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5701
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,799 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=140, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,803 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [141]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5710
} -VS- MigrationInfo{ partitionId=141, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,804 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=141, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [141]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5710
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=141, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [141]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5710
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,805 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=141, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,810 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [142]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5712
} -VS- MigrationInfo{ partitionId=142, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,811 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=142, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [142]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5712
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=142, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [142]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5712
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,812 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=142, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,816 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [143]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5712
} -VS- MigrationInfo{ partitionId=143, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,817 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=143, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [143]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5712
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=143, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [143]{
	0:Address[127.0.0.1]:5704
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5712
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,819 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=143, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5704, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,823 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [144]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5708
} -VS- MigrationInfo{ partitionId=144, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,824 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=144, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [144]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5708
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=144, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [144]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5708
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,825 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=144, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,829 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [145]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5705
} -VS- MigrationInfo{ partitionId=145, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,830 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=145, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [145]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5705
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=145, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [145]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5705
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,832 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=145, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,836 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [146]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5712
} -VS- MigrationInfo{ partitionId=146, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,837 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=146, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [146]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5712
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=146, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [146]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5712
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,838 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=146, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,842 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [147]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5701
} -VS- MigrationInfo{ partitionId=147, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,843 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=147, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [147]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5701
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=147, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [147]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5701
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,844 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=147, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,848 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [148]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5709
} -VS- MigrationInfo{ partitionId=148, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,849 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=148, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [148]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5709
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=148, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [148]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5709
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,851 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=148, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,855 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [149]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5707
} -VS- MigrationInfo{ partitionId=149, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,856 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=149, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [149]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5707
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=149, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [149]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5707
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,858 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=149, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,862 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [150]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5703
} -VS- MigrationInfo{ partitionId=150, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,863 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=150, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [150]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5703
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=150, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [150]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5703
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,864 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=150, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,868 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [151]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5707
} -VS- MigrationInfo{ partitionId=151, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,869 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=151, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [151]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5707
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=151, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [151]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5707
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,870 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=151, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,874 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [152]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5712
} -VS- MigrationInfo{ partitionId=152, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,875 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=152, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [152]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5712
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=152, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [152]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5712
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,876 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=152, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,880 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [153]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5712
} -VS- MigrationInfo{ partitionId=153, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,881 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=153, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [153]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5712
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=153, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [153]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5712
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,882 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=153, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,886 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [154]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5710
} -VS- MigrationInfo{ partitionId=154, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,887 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=154, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [154]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5710
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=154, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [154]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5710
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,889 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=154, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,893 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [155]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5710
} -VS- MigrationInfo{ partitionId=155, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,894 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=155, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [155]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5710
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=155, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [155]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5710
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,896 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=155, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,900 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [156]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5709
} -VS- MigrationInfo{ partitionId=156, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,900 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=156, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [156]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5709
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=156, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [156]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5709
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,902 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=156, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,906 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [157]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5708
} -VS- MigrationInfo{ partitionId=157, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,907 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=157, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [157]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5708
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=157, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [157]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5708
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,909 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=157, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,913 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [158]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5702
} -VS- MigrationInfo{ partitionId=158, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,914 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=158, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [158]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5702
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=158, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [158]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5702
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,916 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=158, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,921 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [159]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5705
} -VS- MigrationInfo{ partitionId=159, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,922 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=159, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [159]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5705
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=159, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [159]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5705
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,923 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=159, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,927 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [160]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5708
} -VS- MigrationInfo{ partitionId=160, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,928 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=160, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [160]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5708
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=160, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [160]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5708
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,930 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=160, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,934 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [161]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5701
} -VS- MigrationInfo{ partitionId=161, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,935 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=161, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [161]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5701
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=161, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [161]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5701
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,936 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=161, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,940 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [162]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5705
} -VS- MigrationInfo{ partitionId=162, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,941 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=162, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [162]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5705
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=162, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [162]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5705
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,943 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=162, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,947 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [163]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5702
} -VS- MigrationInfo{ partitionId=163, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,948 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=163, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [163]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5702
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=163, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [163]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5702
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,950 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=163, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,954 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [164]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5704
} -VS- MigrationInfo{ partitionId=164, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,955 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=164, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [164]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5704
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=164, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [164]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5704
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,956 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=164, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,960 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [165]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5706
} -VS- MigrationInfo{ partitionId=165, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,961 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=165, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [165]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5706
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=165, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [165]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5706
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,963 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=165, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,967 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [166]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5710
} -VS- MigrationInfo{ partitionId=166, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,968 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=166, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [166]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5710
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=166, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [166]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5702
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5710
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,969 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=166, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,973 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [167]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5707
} -VS- MigrationInfo{ partitionId=167, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,974 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=167, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [167]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5707
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=167, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [167]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5707
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,976 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=167, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,980 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [168]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5704
} -VS- MigrationInfo{ partitionId=168, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,981 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=168, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [168]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5704
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=168, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [168]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5704
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,982 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=168, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,987 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [169]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5706
} -VS- MigrationInfo{ partitionId=169, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,988 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=169, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [169]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5706
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=169, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [169]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5706
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,989 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=169, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,993 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [170]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5709
} -VS- MigrationInfo{ partitionId=170, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:40,994 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=170, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [170]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5709
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=170, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [170]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5709
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:40,996 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=170, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,001 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [171]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5712
} -VS- MigrationInfo{ partitionId=171, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,002 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=171, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [171]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5712
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=171, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [171]{
	0:Address[127.0.0.1]:5711
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5712
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,003 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=171, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5711, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,007 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [172]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5704
} -VS- MigrationInfo{ partitionId=172, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,008 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=172, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [172]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5704
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=172, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [172]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5704
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,010 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=172, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,014 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [173]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5712
} -VS- MigrationInfo{ partitionId=173, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,015 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=173, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [173]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5712
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=173, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [173]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5712
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,017 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=173, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,021 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [174]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5711
} -VS- MigrationInfo{ partitionId=174, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,022 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=174, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [174]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5711
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=174, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [174]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5711
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,023 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=174, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,027 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [175]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5710
} -VS- MigrationInfo{ partitionId=175, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,028 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=175, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [175]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5710
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=175, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [175]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5710
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,030 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=175, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,034 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [176]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5702
} -VS- MigrationInfo{ partitionId=176, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,035 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=176, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [176]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5702
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=176, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [176]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5702
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,036 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=176, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,040 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [177]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5701
} -VS- MigrationInfo{ partitionId=177, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,041 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=177, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [177]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5701
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=177, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [177]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5701
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,043 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=177, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,047 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [178]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5707
} -VS- MigrationInfo{ partitionId=178, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,048 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=178, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [178]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5707
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=178, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [178]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5707
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,049 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=178, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,053 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [179]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5703
} -VS- MigrationInfo{ partitionId=179, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,054 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=179, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [179]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5703
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=179, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [179]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5703
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,055 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=179, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,059 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [180]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5708
} -VS- MigrationInfo{ partitionId=180, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,060 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=180, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [180]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5708
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=180, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [180]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5709
	6:Address[127.0.0.1]:5708
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,062 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=180, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,066 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [181]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5703
} -VS- MigrationInfo{ partitionId=181, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,067 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=181, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [181]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5703
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=181, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [181]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5703
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,068 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=181, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,072 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [182]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5706
} -VS- MigrationInfo{ partitionId=182, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,073 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=182, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [182]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5706
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=182, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [182]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5706
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,075 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=182, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,079 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [183]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5709
} -VS- MigrationInfo{ partitionId=183, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,080 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=183, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [183]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5709
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=183, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [183]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5709
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,081 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=183, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,085 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [184]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5710
} -VS- MigrationInfo{ partitionId=184, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,086 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=184, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [184]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5710
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=184, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [184]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5710
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,088 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=184, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,092 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [185]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5705
} -VS- MigrationInfo{ partitionId=185, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,093 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=185, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [185]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5705
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=185, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [185]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5705
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,095 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=185, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,098 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [186]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5711
} -VS- MigrationInfo{ partitionId=186, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,099 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=186, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [186]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5711
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=186, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [186]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5711
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,101 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=186, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,105 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [187]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5702
} -VS- MigrationInfo{ partitionId=187, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,106 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=187, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [187]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5702
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=187, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [187]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5702
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,107 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=187, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,111 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [188]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5706
} -VS- MigrationInfo{ partitionId=188, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,112 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=188, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [188]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5706
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=188, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [188]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5710
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5706
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,114 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=188, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,118 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [189]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5703
} -VS- MigrationInfo{ partitionId=189, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,119 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=189, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [189]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5703
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=189, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [189]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5703
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,120 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=189, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,125 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [190]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5709
} -VS- MigrationInfo{ partitionId=190, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,126 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=190, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [190]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5709
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=190, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [190]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5709
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,128 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=190, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,132 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [191]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5705
} -VS- MigrationInfo{ partitionId=191, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,134 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=191, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [191]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5705
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=191, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [191]{
	0:Address[127.0.0.1]:5703
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5705
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,135 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=191, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5703, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,139 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [192]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5710
} -VS- MigrationInfo{ partitionId=192, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,140 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=192, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [192]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5710
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=192, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [192]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5710
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,142 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=192, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,146 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [193]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5704
} -VS- MigrationInfo{ partitionId=193, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,147 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=193, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [193]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5704
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=193, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [193]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5704
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,149 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=193, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,153 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [194]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5701
} -VS- MigrationInfo{ partitionId=194, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,154 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=194, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [194]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5701
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=194, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [194]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5701
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,155 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=194, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,159 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [195]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5701
} -VS- MigrationInfo{ partitionId=195, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,160 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=195, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [195]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5701
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=195, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [195]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5701
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,162 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=195, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,166 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [196]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5711
} -VS- MigrationInfo{ partitionId=196, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,166 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=196, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [196]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5711
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=196, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [196]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5711
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,168 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=196, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,172 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [197]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5703
} -VS- MigrationInfo{ partitionId=197, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,173 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=197, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [197]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5703
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=197, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [197]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5703
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,175 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=197, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,179 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [198]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5702
} -VS- MigrationInfo{ partitionId=198, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,180 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=198, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [198]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5702
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=198, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [198]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5702
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,180 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=198, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,184 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [199]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5711
} -VS- MigrationInfo{ partitionId=199, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,185 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=199, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [199]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5711
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=199, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [199]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5711
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,187 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=199, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,188 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [200]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5711
} -VS- MigrationInfo{ partitionId=200, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,189 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=200, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [200]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5711
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=200, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [200]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5711
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,190 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=200, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,192 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [201]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5709
} -VS- MigrationInfo{ partitionId=201, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,193 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=201, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [201]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5709
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=201, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [201]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5709
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,194 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=201, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,196 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [202]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5712
} -VS- MigrationInfo{ partitionId=202, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,197 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=202, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [202]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5712
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=202, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [202]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5712
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,199 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=202, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,201 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [203]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5705
} -VS- MigrationInfo{ partitionId=203, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,201 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=203, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [203]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5705
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=203, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [203]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5705
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,203 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=203, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,205 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [204]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5703
} -VS- MigrationInfo{ partitionId=204, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,206 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=204, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [204]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5703
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=204, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [204]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5703
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,207 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=204, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,210 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [205]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5702
} -VS- MigrationInfo{ partitionId=205, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,211 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=205, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [205]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5702
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=205, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [205]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5702
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,212 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=205, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,215 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [206]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5704
} -VS- MigrationInfo{ partitionId=206, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,216 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=206, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [206]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5704
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=206, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [206]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5704
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,217 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=206, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,220 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [207]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5705
} -VS- MigrationInfo{ partitionId=207, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,221 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=207, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [207]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5705
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=207, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [207]{
	0:Address[127.0.0.1]:5710
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5705
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,222 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=207, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5710, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,226 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [208]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5701
} -VS- MigrationInfo{ partitionId=208, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,227 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=208, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [208]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5701
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=208, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [208]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5701
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,228 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=208, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,232 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [209]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5703
} -VS- MigrationInfo{ partitionId=209, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,233 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=209, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [209]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5703
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=209, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [209]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5703
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,235 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=209, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,239 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [210]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5703
} -VS- MigrationInfo{ partitionId=210, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,240 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=210, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [210]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5703
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=210, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [210]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5703
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,242 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=210, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,247 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [211]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5705
} -VS- MigrationInfo{ partitionId=211, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,247 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=211, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [211]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5705
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=211, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [211]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5705
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,249 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=211, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,253 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [212]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5711
} -VS- MigrationInfo{ partitionId=212, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,254 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=212, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [212]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5711
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=212, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [212]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5711
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,255 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=212, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,259 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [213]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5707
} -VS- MigrationInfo{ partitionId=213, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,260 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=213, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [213]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5707
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=213, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [213]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5709
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5707
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,262 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=213, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,265 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [214]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5707
} -VS- MigrationInfo{ partitionId=214, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,266 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=214, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [214]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5707
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=214, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [214]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5707
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,268 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=214, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,273 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [215]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5711
} -VS- MigrationInfo{ partitionId=215, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,274 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=215, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [215]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5711
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=215, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [215]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5711
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,275 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=215, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,317 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [216]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5708
} -VS- MigrationInfo{ partitionId=216, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,318 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=216, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [216]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5708
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=216, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [216]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5708
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,319 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=216, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,323 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [217]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5708
} -VS- MigrationInfo{ partitionId=217, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,324 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=217, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [217]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5708
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=217, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [217]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5708
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,326 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=217, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,330 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [218]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5705
} -VS- MigrationInfo{ partitionId=218, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,331 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=218, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [218]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5705
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=218, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [218]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5705
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,332 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=218, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,336 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [219]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5704
} -VS- MigrationInfo{ partitionId=219, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,337 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=219, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [219]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5704
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=219, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [219]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5704
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,339 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=219, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,343 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [220]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5704
} -VS- MigrationInfo{ partitionId=220, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,343 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=220, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [220]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5704
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=220, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [220]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5709
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5704
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,345 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=220, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,349 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [221]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5703
} -VS- MigrationInfo{ partitionId=221, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,350 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=221, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [221]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5703
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=221, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [221]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5705
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5703
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,351 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=221, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,355 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [222]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5703
} -VS- MigrationInfo{ partitionId=222, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,356 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=222, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [222]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5703
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=222, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [222]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5709
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5703
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,357 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=222, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,360 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [223]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5705
} -VS- MigrationInfo{ partitionId=223, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,361 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=223, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [223]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5705
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=223, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [223]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5706
	4:Address[127.0.0.1]:5707
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5705
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,363 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=223, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,365 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [224]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5706
} -VS- MigrationInfo{ partitionId=224, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,367 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=224, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [224]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5706
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=224, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [224]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5706
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,368 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=224, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,373 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [225]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5710
} -VS- MigrationInfo{ partitionId=225, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,374 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=225, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [225]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5710
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=225, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [225]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5707
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5710
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,375 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=225, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,379 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [226]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5705
} -VS- MigrationInfo{ partitionId=226, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,380 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=226, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [226]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5705
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=226, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [226]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5705
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,382 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=226, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,386 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [227]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5707
} -VS- MigrationInfo{ partitionId=227, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,387 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=227, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [227]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5707
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=227, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [227]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5704
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5710
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5707
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,388 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=227, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,393 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [228]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5701
} -VS- MigrationInfo{ partitionId=228, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,394 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=228, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [228]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5701
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=228, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [228]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5702
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5705
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5701
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,395 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=228, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,399 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [229]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5702
} -VS- MigrationInfo{ partitionId=229, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,400 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=229, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [229]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5702
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=229, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [229]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5702
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,402 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=229, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,406 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [230]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5710
} -VS- MigrationInfo{ partitionId=230, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,407 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=230, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [230]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5710
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=230, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [230]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5710
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,409 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=230, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,413 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [231]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5708
} -VS- MigrationInfo{ partitionId=231, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,414 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=231, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [231]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5708
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=231, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [231]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5711
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5706
	6:Address[127.0.0.1]:5708
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,415 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=231, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,419 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [232]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5704
} -VS- MigrationInfo{ partitionId=232, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,420 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=232, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [232]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5704
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=232, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [232]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5703
	6:Address[127.0.0.1]:5704
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,421 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=232, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,425 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [233]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5702
} -VS- MigrationInfo{ partitionId=233, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,426 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=233, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [233]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5702
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=233, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [233]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5710
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5704
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5702
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,428 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=233, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,432 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [234]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5702
} -VS- MigrationInfo{ partitionId=234, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,433 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=234, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [234]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5702
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=234, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [234]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5708
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5702
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,434 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=234, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,438 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [235]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5708
} -VS- MigrationInfo{ partitionId=235, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,439 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=235, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [235]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5708
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=235, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [235]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5702
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5708
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,440 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=235, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,444 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [236]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5706
} -VS- MigrationInfo{ partitionId=236, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,445 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=236, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [236]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5706
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=236, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [236]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5703
	2:Address[127.0.0.1]:5712
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5701
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5706
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,446 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=236, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,450 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [237]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5703
} -VS- MigrationInfo{ partitionId=237, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,451 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=237, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [237]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5703
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=237, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [237]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5709
	2:Address[127.0.0.1]:5701
	3:Address[127.0.0.1]:5711
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5710
	6:Address[127.0.0.1]:5703
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,452 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=237, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,457 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [238]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5710
} -VS- MigrationInfo{ partitionId=238, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,457 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=238, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [238]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5710
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=238, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [238]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5707
	6:Address[127.0.0.1]:5710
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,458 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=238, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,462 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [239]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5706
} -VS- MigrationInfo{ partitionId=239, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,463 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=239, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [239]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5706
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=239, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [239]{
	0:Address[127.0.0.1]:5702
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5703
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5706
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,464 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=239, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5702, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,468 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [246]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5703
} -VS- MigrationInfo{ partitionId=246, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,468 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=246, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [246]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5703
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=246, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [246]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5705
	3:Address[127.0.0.1]:5701
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5704
	6:Address[127.0.0.1]:5703
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,469 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=246, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,473 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [248]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5707
} -VS- MigrationInfo{ partitionId=248, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,474 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=248, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [248]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5707
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=248, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [248]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5708
	6:Address[127.0.0.1]:5707
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,474 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=248, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,478 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [249]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5711
} -VS- MigrationInfo{ partitionId=249, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,479 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=249, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [249]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5711
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=249, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [249]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5706
	3:Address[127.0.0.1]:5704
	4:Address[127.0.0.1]:5703
	5:Address[127.0.0.1]:5712
	6:Address[127.0.0.1]:5711
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,480 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=249, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,483 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [250]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5710
} -VS- MigrationInfo{ partitionId=250, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,484 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=250, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [250]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5710
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=250, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [250]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5712
	2:Address[127.0.0.1]:5711
	3:Address[127.0.0.1]:5707
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5705
	6:Address[127.0.0.1]:5710
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,484 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=250, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,487 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [251]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5707
} -VS- MigrationInfo{ partitionId=251, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,487 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=251, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [251]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5707
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=251, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [251]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5706
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5710
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5707
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,488 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=251, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,491 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [252]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5712
} -VS- MigrationInfo{ partitionId=252, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,491 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-0] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=252, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [252]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5712
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=252, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [252]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5705
	2:Address[127.0.0.1]:5704
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5701
	6:Address[127.0.0.1]:5712
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,492 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=252, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,497 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [253]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5705
} -VS- MigrationInfo{ partitionId=253, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,498 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-1] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=253, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [253]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5705
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=253, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [253]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5701
	2:Address[127.0.0.1]:5708
	3:Address[127.0.0.1]:5702
	4:Address[127.0.0.1]:5706
	5:Address[127.0.0.1]:5711
	6:Address[127.0.0.1]:5705
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,499 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=253, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,503 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [254]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5707
} -VS- MigrationInfo{ partitionId=254, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,504 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-2] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=254, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [254]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5707
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=254, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [254]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5708
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5712
	4:Address[127.0.0.1]:5711
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5707
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,505 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=254, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,509 [hz._hzInstance_1_FenixFrameworkGroup.migration] ERROR [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] ERROR: partition owner is not the source of migration! -> Partition [255]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5711
} -VS- MigrationInfo{ partitionId=255, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:41,510 [hz._hzInstance_1_FenixFrameworkGroup.operation.thread-3] WARN  [com.hazelcast.partition.MigrationRequestOperation] [127.0.0.1]:5701 [FenixFrameworkGroup] Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=255, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [255]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5711
}
com.hazelcast.core.HazelcastException: Cannot migrate! This node is not owner of the partition => MigrationInfo{ partitionId=255, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=true} -> Partition [255]{
	0:Address[127.0.0.1]:5709
	1:Address[127.0.0.1]:5707
	2:Address[127.0.0.1]:5703
	3:Address[127.0.0.1]:5708
	4:Address[127.0.0.1]:5712
	5:Address[127.0.0.1]:5702
	6:Address[127.0.0.1]:5711
}
	at com.hazelcast.partition.MigrationRequestOperation.run(MigrationRequestOperation.java:79)
	at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:219)
	at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
	at com.hazelcast.spi.impl.OperationServiceImpl$LocalOperationProcessor.run(OperationServiceImpl.java:652)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
	at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:728)
2013-10-08 19:11:41,511 [hz._hzInstance_1_FenixFrameworkGroup.migration] WARN  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] Migration failed: MigrationInfo{ partitionId=255, source=Address[127.0.0.1]:5701, destination=Address[127.0.0.1]:5709, master=Address[127.0.0.1]:5701, valid=true, processing=false}
2013-10-08 19:11:42,218 [Incoming-1,deimos-esw-35246] INFO  [org.infinispan.remoting.transport.jgroups.JGroupsTransport] ISPN000094: Received new cluster view: [deimos-esw-35246|1] [deimos-esw-35246, deimos-esw-50886]
2013-10-08 19:11:42,333 [Incoming-3,deimos-esw-35246] INFO  [org.infinispan.remoting.transport.jgroups.JGroupsTransport] ISPN000094: Received new cluster view: [deimos-esw-35246|2] [deimos-esw-35246, deimos-esw-50886, deimos-esw-40168]
2013-10-08 19:11:42,499 [Incoming-4,deimos-esw-35246] INFO  [org.infinispan.remoting.transport.jgroups.JGroupsTransport] ISPN000094: Received new cluster view: [deimos-esw-35246|3] [deimos-esw-35246, deimos-esw-50886, deimos-esw-40168, deimos-esw-54141, deimos-esw-26732]
2013-10-08 19:11:42,515 [hz._hzInstance_1_FenixFrameworkGroup.migration] INFO  [com.hazelcast.partition.PartitionService] [127.0.0.1]:5701 [FenixFrameworkGroup] All migration tasks has been completed, queues are empty.
2013-10-08 19:11:42,670 [Incoming-4,deimos-esw-35246] INFO  [org.infinispan.remoting.transport.jgroups.JGroupsTransport] ISPN000094: Received new cluster view: [deimos-esw-35246|4] [deimos-esw-35246, deimos-esw-50886, deimos-esw-40168, deimos-esw-54141, deimos-esw-26732, deimos-esw-53962, deimos-esw-14021]
2013-10-08 19:11:42,844 [Incoming-4,deimos-esw-35246] INFO  [org.infinispan.remoting.transport.jgroups.JGroupsTransport] ISPN000094: Received new cluster view: [deimos-esw-35246|5] [deimos-esw-35246, deimos-esw-50886, deimos-esw-40168, deimos-esw-54141, deimos-esw-26732, deimos-esw-53962, deimos-esw-14021, deimos-esw-46759, deimos-esw-55645]
2013-10-08 19:11:43,022 [Incoming-4,deimos-esw-35246] INFO  [org.infinispan.remoting.transport.jgroups.JGroupsTransport] ISPN000094: Received new cluster view: [deimos-esw-35246|6] [deimos-esw-35246, deimos-esw-50886, deimos-esw-40168, deimos-esw-54141, deimos-esw-26732, deimos-esw-53962, deimos-esw-14021, deimos-esw-46759, deimos-esw-55645, deimos-esw-40956]
2013-10-08 19:11:43,194 [Incoming-4,deimos-esw-35246] INFO  [org.infinispan.remoting.transport.jgroups.JGroupsTransport] ISPN000094: Received new cluster view: [deimos-esw-35246|7] [deimos-esw-35246, deimos-esw-50886, deimos-esw-40168, deimos-esw-54141, deimos-esw-26732, deimos-esw-53962, deimos-esw-14021, deimos-esw-46759, deimos-esw-55645, deimos-esw-40956, deimos-esw-3405, deimos-esw-5411]
2013-10-08 19:11:47,738 [pool-1-thread-1] INFO  [org.radargun.Slave] Executing stage: ClusterValidation {exitBenchmarkOnSlaveFailure=false, partialReplication=false, replicationTimeSleep=2000, replicationTryCount=60, runOnAllSlaves=false, slaves=null, useSmartClassLoading=true }
2013-10-08 19:11:47,838 [pool-1-thread-1] INFO  [org.radargun.stages.ClusterValidationStage] Number of caches that replicated here is 10
2013-10-08 19:11:47,863 [pool-1-thread-1] INFO  [org.radargun.stages.ClusterValidationStage] Replication test failed, 1 tries so far. Sleeping for 2 seconds and trying again.
2013-10-08 19:11:49,870 [pool-1-thread-1] INFO  [org.radargun.stages.ClusterValidationStage] Number of caches that replicated here is 11
2013-10-08 19:11:49,870 [pool-1-thread-1] INFO  [org.radargun.stages.ClusterValidationStage] Replication test successfully passed. partialReplication? false, replicationCount = 11
2013-10-08 19:11:49,892 [pool-1-thread-1] INFO  [org.radargun.stages.ClusterValidationStage] Confirm phase successful.
2013-10-08 19:11:49,895 [pool-1-thread-1] INFO  [org.radargun.Slave] Finished stage: ClusterValidation {exitBenchmarkOnSlaveFailure=false, partialReplication=false, replicationTimeSleep=2000, replicationTryCount=60, runOnAllSlaves=false, slaves=[ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ], useSmartClassLoading=true }
2013-10-08 19:11:49,896 [main] INFO  [org.radargun.Slave] Ack successfully sent to the master
2013-10-08 19:11:50,043 [pool-1-thread-1] INFO  [org.radargun.Slave] Executing stage: StressTestWarmup {bulkSize=1, cacheSpecificKeyGenerator=false, commitTransactions=true, duration=1 mins 0 secs, entrySize=1000, exitBenchmarkOnSlaveFailure=false, fixedKeys=true, generateHistogramRange=false, keyGeneratorClass=org.radargun.stressors.StringKeyGenerator, keyGeneratorParam=null, loadAllKeys=false, numEntries=10000, numOfThreads=4, numRequests=10000, numThreads=4, numberOfAttributes=10000, numberOfRequests=10000, opsCountStatusLog=100000, poolKeys=true, preferAsyncOperations=false, removePercentage=0, replaceInvalidPercentage=40, runOnAllSlaves=false, sharedKeys=false, sizeOfAnAttribute=1000, slaves=null, transactionSize=10000, useAtomics=false, useHistogramStatistics=false, useSimpleStatistics=true, useSmartClassLoading=true, useTransactions=null, writePercentage=20, writeTxPercentage=20 }
2013-10-08 19:11:50,048 [pool-1-thread-1] INFO  [org.radargun.stages.StressTestWarmupStage] Starting StressTestWarmupStage: StressTestWarmup {bulkSize=1, cacheSpecificKeyGenerator=false, commitTransactions=true, duration=1 mins 0 secs, entrySize=1000, exitBenchmarkOnSlaveFailure=false, fixedKeys=true, generateHistogramRange=false, keyGeneratorClass=org.radargun.stressors.StringKeyGenerator, keyGeneratorParam=null, loadAllKeys=false, numEntries=10000, numOfThreads=4, numRequests=10000, numThreads=4, numberOfAttributes=10000, numberOfRequests=10000, opsCountStatusLog=100000, poolKeys=true, preferAsyncOperations=false, removePercentage=0, replaceInvalidPercentage=40, runOnAllSlaves=false, sharedKeys=false, sizeOfAnAttribute=1000, slaves=null, transactionSize=10000, useAtomics=false, useHistogramStatistics=false, useSimpleStatistics=true, useSmartClassLoading=true, useTransactions=null, writePercentage=20, writeTxPercentage=20 }
2013-10-08 19:11:50,055 [pool-1-thread-1] INFO  [org.radargun.stressors.StressTestStressor] Using key generator org.radargun.stressors.StringKeyGenerator, param null
2013-10-08 19:11:50,056 [pool-1-thread-1] INFO  [org.radargun.stressors.StressTestStressor] Executing: StressTestStressor{opsCountStatusLog=100000, numRequests=10000, numEntries=10000, entrySize=1000, writePercentage=20, numThreads=4, cacheWrapper=org.radargun.cachewrappers.FFWrapperLF@33cdefce, nodeIndex=0, useTransactions=true, transactionSize=10000, commitTransactions=true, durationMillis=60000}
2013-10-08 19:11:50,057 [pool-1-thread-1] INFO  [org.radargun.stressors.StressTestStressor] Cache wrapper info is: FFWrapperLF using infinispan52
2013-10-08 19:12:06,161 [hz._hzInstance_1_FenixFrameworkGroup.HealthMonitor] INFO  [com.hazelcast.util.HealthMonitor] [127.0.0.1]:5701 [FenixFrameworkGroup] 
memory used=145.5M, free=2.7G, total=2.8G, max=4.7G, used/total=5.06% used/max=3.04%
cpu process-load=7.00%, system-load=78.00%, system-loadaverage=399.00%
2013-10-08 19:16:24,538 [pool-1-thread-1] INFO  [org.radargun.stressors.StressTestStressor] Started 4 stressor threads.
2013-10-08 19:16:24,543 [Stressor-2] INFO  [org.radargun.stressors.StressTestStressor] Number of ops executed so far: 1. Elapsed time: 0.001 secs. Remaining: 59.999 secs. Total: 1 mins 0 secs
2013-10-08 19:16:44,547 [Stressor-0] INFO  [org.radargun.stressors.StressTestStressor] Number of ops executed so far: 490000. Elapsed time: 20.009 secs. Remaining: 39.991 secs. Total: 1 mins 0 secs
2013-10-08 19:17:08,858 [Stressor-0] INFO  [org.radargun.stressors.StressTestStressor] Number of ops executed so far: 1010000. Elapsed time: 44.320 secs. Remaining: 15.680 secs. Total: 1 mins 0 secs
2013-10-08 19:17:44,933 [Stressor-2] INFO  [org.radargun.stressors.StressTestStressor] Number of ops executed so far: 110000. Elapsed time: 1 mins 20 secs. Remaining: 0.000 secs. Total: 1 mins 0 secs
2013-10-08 19:17:48,687 [pool-1-thread-1] INFO  [org.radargun.stressors.StressTestStressor] Finished generating report. Test duration is: 5 mins 58 secs
2013-10-08 19:17:48,690 [pool-1-thread-1] INFO  [org.radargun.stages.StressTestWarmupStage] The warmup took: 358 seconds.
2013-10-08 19:17:48,699 [pool-1-thread-1] INFO  [org.radargun.Slave] Finished stage: StressTestWarmup {bulkSize=1, cacheSpecificKeyGenerator=false, commitTransactions=true, duration=1 mins 0 secs, entrySize=1000, exitBenchmarkOnSlaveFailure=false, fixedKeys=true, generateHistogramRange=false, keyGeneratorClass=org.radargun.stressors.StringKeyGenerator, keyGeneratorParam=null, loadAllKeys=false, numEntries=10000, numOfThreads=4, numRequests=10000, numThreads=4, numberOfAttributes=10000, numberOfRequests=10000, opsCountStatusLog=100000, poolKeys=true, preferAsyncOperations=false, removePercentage=0, replaceInvalidPercentage=40, runOnAllSlaves=false, sharedKeys=false, sizeOfAnAttribute=1000, slaves=null, transactionSize=10000, useAtomics=false, useHistogramStatistics=false, useSimpleStatistics=true, useSmartClassLoading=true, useTransactions=null, writePercentage=20, writeTxPercentage=20 }
2013-10-08 19:17:48,699 [main] INFO  [org.radargun.Slave] Ack successfully sent to the master
2013-10-08 19:17:56,333 [pool-1-thread-1] INFO  [org.radargun.Slave] Executing stage: ClearClusterStage {ClearCluster {exitBenchmarkOnSlaveFailure=false, runOnAllSlaves=false, slaves=[ 0 ], useSmartClassLoading=true }
2013-10-08 19:17:56,334 [pool-1-thread-1] INFO  [org.radargun.stages.ClearClusterStage] Before executing clear, memory looks like this: Memory - free: 1,415,678 kb - max:4,906,688 kb- total:3,992,852 kb
2013-10-08 19:17:56,335 [pool-1-thread-1] WARN  [org.radargun.cachewrappers.FFWrapperLF] Fenix Framework never forgets...
2013-10-08 19:18:05,198 [pool-1-thread-1] INFO  [org.radargun.stages.ClearClusterStage] After executing cleanup, memory looks like this: Memory - free: 2,083,194 kb - max:4,906,688 kb- total:4,358,756 kb
2013-10-08 19:18:05,201 [pool-1-thread-1] INFO  [org.radargun.Slave] Finished stage: ClearClusterStage {ClearCluster {exitBenchmarkOnSlaveFailure=false, runOnAllSlaves=false, slaves=[ 0 ], useSmartClassLoading=true }
2013-10-08 19:18:05,201 [main] INFO  [org.radargun.Slave] Ack successfully sent to the master
2013-10-08 19:18:06,391 [pool-1-thread-1] INFO  [org.radargun.Slave] Executing stage: StressTest {bulkSize=1, cacheSpecificKeyGenerator=false, commitTransactions=true, duration=1 mins 0 secs, entrySize=1000, exitBenchmarkOnSlaveFailure=false, fixedKeys=true, generateHistogramRange=false, keyGeneratorClass=org.radargun.stressors.StringKeyGenerator, keyGeneratorParam=null, loadAllKeys=false, numEntries=10000, numOfThreads=4, numRequests=10000000, numThreads=4, numberOfAttributes=10000, numberOfRequests=10000000, opsCountStatusLog=500000, poolKeys=true, preferAsyncOperations=false, removePercentage=0, replaceInvalidPercentage=40, runOnAllSlaves=false, sharedKeys=false, sizeOfAnAttribute=1000, slaves=null, transactionSize=10000, useAtomics=false, useHistogramStatistics=false, useSimpleStatistics=true, useSmartClassLoading=true, useTransactions=true, writePercentage=10, writeTxPercentage=100 }
2013-10-08 19:18:06,397 [pool-1-thread-1] INFO  [org.radargun.stages.StressTestStage] Starting StressTestStage: StressTest {bulkSize=1, cacheSpecificKeyGenerator=false, commitTransactions=true, duration=1 mins 0 secs, entrySize=1000, exitBenchmarkOnSlaveFailure=false, fixedKeys=true, generateHistogramRange=false, keyGeneratorClass=org.radargun.stressors.StringKeyGenerator, keyGeneratorParam=null, loadAllKeys=false, numEntries=10000, numOfThreads=4, numRequests=10000000, numThreads=4, numberOfAttributes=10000, numberOfRequests=10000000, opsCountStatusLog=500000, poolKeys=true, preferAsyncOperations=false, removePercentage=0, replaceInvalidPercentage=40, runOnAllSlaves=false, sharedKeys=false, sizeOfAnAttribute=1000, slaves=null, transactionSize=10000, useAtomics=false, useHistogramStatistics=false, useSimpleStatistics=true, useSmartClassLoading=true, useTransactions=true, writePercentage=10, writeTxPercentage=100 }
2013-10-08 19:18:06,402 [pool-1-thread-1] INFO  [org.radargun.stressors.StressTestStressor] Using key generator org.radargun.stressors.StringKeyGenerator, param null
2013-10-08 19:18:06,402 [pool-1-thread-1] INFO  [org.radargun.stressors.StressTestStressor] Executing: StressTestStressor{opsCountStatusLog=500000, numRequests=10000000, numEntries=10000, entrySize=1000, writePercentage=10, numThreads=4, cacheWrapper=org.radargun.cachewrappers.FFWrapperLF@33cdefce, nodeIndex=0, useTransactions=true, transactionSize=10000, commitTransactions=true, durationMillis=60000}
2013-10-08 19:18:06,405 [pool-1-thread-1] INFO  [org.radargun.stressors.StressTestStressor] Cache wrapper info is: FFWrapperLF using infinispan52
2013-10-08 19:21:26,403 [hz._hzInstance_1_FenixFrameworkGroup.HealthMonitor] INFO  [com.hazelcast.util.HealthMonitor] [127.0.0.1]:5701 [FenixFrameworkGroup] 
memory used=3.3G, free=896.7M, total=4.2G, max=4.7G, used/total=78.94% used/max=70.12%
cpu process-load=3.00%, system-load=35.00%, system-loadaverage=335.00%
2013-10-08 19:21:56,410 [hz._hzInstance_1_FenixFrameworkGroup.HealthMonitor] INFO  [com.hazelcast.util.HealthMonitor] [127.0.0.1]:5701 [FenixFrameworkGroup] 
memory used=3.5G, free=723.2M, total=4.2G, max=4.7G, used/total=83.01% used/max=73.74%
cpu process-load=3.00%, system-load=39.00%, system-loadaverage=341.00%
2013-10-08 19:22:06,412 [hz._hzInstance_1_FenixFrameworkGroup.HealthMonitor] INFO  [com.hazelcast.util.HealthMonitor] [127.0.0.1]:5701 [FenixFrameworkGroup] 
memory used=3.3G, free=838.8M, total=4.2G, max=4.7G, used/total=80.29% used/max=71.33%
cpu process-load=3.00%, system-load=34.00%, system-loadaverage=350.00%
2013-10-08 19:22:36,485 [hz._hzInstance_1_FenixFrameworkGroup.HealthMonitor] INFO  [com.hazelcast.util.HealthMonitor] [127.0.0.1]:5701 [FenixFrameworkGroup] 
memory used=3.5G, free=644.4M, total=4.2G, max=4.7G, used/total=84.86% used/max=75.39%
cpu process-load=3.00%, system-load=34.00%, system-loadaverage=316.00%
2013-10-08 19:22:46,488 [hz._hzInstance_1_FenixFrameworkGroup.HealthMonitor] INFO  [com.hazelcast.util.HealthMonitor] [127.0.0.1]:5701 [FenixFrameworkGroup] 
memory used=3.5G, free=703.8M, total=4.2G, max=4.7G, used/total=83.47% used/max=74.15%
cpu process-load=3.00%, system-load=38.00%, system-loadaverage=306.00%
2013-10-08 19:22:56,490 [hz._hzInstance_1_FenixFrameworkGroup.HealthMonitor] INFO  [com.hazelcast.util.HealthMonitor] [127.0.0.1]:5701 [FenixFrameworkGroup] 
memory used=3.5G, free=676.5M, total=4.2G, max=4.7G, used/total=84.11% used/max=74.71%
cpu process-load=4.00%, system-load=39.00%, system-loadaverage=352.00%
2013-10-08 19:23:06,492 [hz._hzInstance_1_FenixFrameworkGroup.HealthMonitor] INFO  [com.hazelcast.util.HealthMonitor] [127.0.0.1]:5701 [FenixFrameworkGroup] 
memory used=3.7G, free=487.5M, total=4.2G, max=4.7G, used/total=88.55% used/max=78.66%
cpu process-load=3.00%, system-load=33.00%, system-loadaverage=336.00%
2013-10-08 19:23:16,495 [hz._hzInstance_1_FenixFrameworkGroup.HealthMonitor] INFO  [com.hazelcast.util.HealthMonitor] [127.0.0.1]:5701 [FenixFrameworkGroup] 
memory used=3.6G, free=536.8M, total=4.2G, max=4.7G, used/total=87.39% used/max=77.63%
cpu process-load=3.00%, system-load=36.00%, system-loadaverage=329.00%
2013-10-08 19:23:26,619 [hz._hzInstance_1_FenixFrameworkGroup.HealthMonitor] INFO  [com.hazelcast.util.HealthMonitor] [127.0.0.1]:5701 [FenixFrameworkGroup] 
memory used=3.5G, free=720.2M, total=4.2G, max=4.7G, used/total=83.08% used/max=73.80%
cpu process-load=3.00%, system-load=31.00%, system-loadaverage=340.00%
2013-10-08 19:23:36,621 [hz._hzInstance_1_FenixFrameworkGroup.HealthMonitor] INFO  [com.hazelcast.util.HealthMonitor] [127.0.0.1]:5701 [FenixFrameworkGroup] 
memory used=3.6G, free=527.0M, total=4.2G, max=4.7G, used/total=87.62% used/max=77.84%
cpu process-load=5.00%, system-load=46.00%, system-loadaverage=435.00%
2013-10-08 19:23:46,625 [hz._hzInstance_1_FenixFrameworkGroup.HealthMonitor] INFO  [com.hazelcast.util.HealthMonitor] [127.0.0.1]:5701 [FenixFrameworkGroup] 
memory used=3.3G, free=1.3G, total=4.6G, max=4.7G, used/total=72.49% used/max=71.44%
cpu process-load=2.00%, system-load=44.00%, system-loadaverage=597.00%
2013-10-08 19:24:24,408 [pool-1-thread-1] INFO  [org.radargun.stressors.StressTestStressor] Started 4 stressor threads.
2013-10-08 19:24:24,411 [Stressor-1] INFO  [org.radargun.stressors.StressTestStressor] Number of ops executed so far: 1. Elapsed time: 0.000 secs. Remaining: 1 mins 0 secs. Total: 1 mins 0 secs
2013-10-08 19:24:26,635 [hz._hzInstance_1_FenixFrameworkGroup.HealthMonitor] INFO  [com.hazelcast.util.HealthMonitor] [127.0.0.1]:5701 [FenixFrameworkGroup] 
memory used=3.4G, free=1.2G, total=4.6G, max=4.7G, used/total=73.48% used/max=72.41%
cpu process-load=2.00%, system-load=29.00%, system-loadaverage=535.00%
2013-10-08 19:24:36,639 [hz._hzInstance_1_FenixFrameworkGroup.HealthMonitor] INFO  [com.hazelcast.util.HealthMonitor] [127.0.0.1]:5701 [FenixFrameworkGroup] 
memory used=3.7G, free=926.4M, total=4.6G, max=4.7G, used/total=80.38% used/max=79.22%
cpu process-load=3.00%, system-load=31.00%, system-loadaverage=475.00%
2013-10-08 19:24:45,493 [Stressor-0] INFO  [org.radargun.stressors.StressTestStressor] Number of ops executed so far: 140000. Elapsed time: 21.084 secs. Remaining: 38.916 secs. Total: 1 mins 0 secs
2013-10-08 19:24:46,644 [hz._hzInstance_1_FenixFrameworkGroup.HealthMonitor] INFO  [com.hazelcast.util.HealthMonitor] [127.0.0.1]:5701 [FenixFrameworkGroup] 
memory used=3.9G, free=691.1M, total=4.6G, max=4.7G, used/total=85.36% used/max=84.13%
cpu process-load=3.00%, system-load=28.00%, system-loadaverage=488.00%
2013-10-08 19:24:56,649 [hz._hzInstance_1_FenixFrameworkGroup.HealthMonitor] INFO  [com.hazelcast.util.HealthMonitor] [127.0.0.1]:5701 [FenixFrameworkGroup] 
memory used=4.0G, free=593.7M, total=4.6G, max=4.7G, used/total=87.43% used/max=86.16%
cpu process-load=3.00%, system-load=32.00%, system-loadaverage=554.00%
2013-10-08 19:25:06,654 [hz._hzInstance_1_FenixFrameworkGroup.HealthMonitor] INFO  [com.hazelcast.util.HealthMonitor] [127.0.0.1]:5701 [FenixFrameworkGroup] 
memory used=4.0G, free=581.5M, total=4.6G, max=4.7G, used/total=87.69% used/max=86.41%
cpu process-load=3.00%, system-load=30.00%, system-loadaverage=628.00%
2013-10-08 19:25:07,215 [Stressor-0] INFO  [org.radargun.stressors.StressTestStressor] Number of ops executed so far: 260000. Elapsed time: 42.805 secs. Remaining: 17.195 secs. Total: 1 mins 0 secs
2013-10-08 19:25:16,656 [hz._hzInstance_1_FenixFrameworkGroup.HealthMonitor] INFO  [com.hazelcast.util.HealthMonitor] [127.0.0.1]:5701 [FenixFrameworkGroup] 
memory used=4.0G, free=576.7M, total=4.6G, max=4.7G, used/total=87.79% used/max=86.51%
cpu process-load=4.00%, system-load=44.00%, system-loadaverage=842.00%
2013-10-08 19:25:26,660 [hz._hzInstance_1_FenixFrameworkGroup.HealthMonitor] INFO  [com.hazelcast.util.HealthMonitor] [127.0.0.1]:5701 [FenixFrameworkGroup] 
memory used=3.9G, free=750.8M, total=4.6G, max=4.7G, used/total=84.10% used/max=82.88%
cpu process-load=1.00%, system-load=8.00%, system-loadaverage=720.00%
2013-10-08 19:25:27,445 [Stressor-1] ERROR [org.infinispan.interceptors.InvocationContextInterceptor] ISPN000136: Execution error
org.infinispan.util.concurrent.TimeoutException: Replication timeout for deimos-esw-53962
	at org.infinispan.remoting.transport.AbstractTransport.parseResponseAndAddToResponseList(AbstractTransport.java:113)
	at org.infinispan.remoting.transport.jgroups.JGroupsTransport.invokeRemotely(JGroupsTransport.java:541)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:169)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:190)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:247)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:234)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:229)
	at org.infinispan.interceptors.ReplicationInterceptor.sendCommitCommand(ReplicationInterceptor.java:94)
	at org.infinispan.interceptors.ReplicationInterceptor.visitCommitCommand(ReplicationInterceptor.java:85)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.EntryWrappingInterceptor.visitCommitCommand(EntryWrappingInterceptor.java:116)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.interceptors.locking.AbstractTxLockingInterceptor.visitCommitCommand(AbstractTxLockingInterceptor.java:101)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.NotificationInterceptor.visitCommitCommand(NotificationInterceptor.java:65)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.TxInterceptor.visitCommitCommand(TxInterceptor.java:153)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.statetransfer.TransactionSynchronizerInterceptor.visitCommitCommand(TransactionSynchronizerInterceptor.java:73)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTopologyAffectedCommand(StateTransferInterceptor.java:216)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTxCommand(StateTransferInterceptor.java:189)
	at org.infinispan.statetransfer.StateTransferInterceptor.visitCommitCommand(StateTransferInterceptor.java:121)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleAll(InvocationContextInterceptor.java:128)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleDefault(InvocationContextInterceptor.java:92)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.InterceptorChain.invoke(InterceptorChain.java:343)
	at org.infinispan.transaction.TransactionCoordinator.commit(TransactionCoordinator.java:182)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.afterCompletion(SynchronizationAdapter.java:81)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.afterCompletion(SynchronizationImple.java:96)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.afterCompletion(TwoPhaseCoordinator.java:402)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:103)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.infinispan.CacheImpl.executeCommandAndCommitIfNeeded(CacheImpl.java:1196)
	at org.infinispan.CacheImpl.putInternal(CacheImpl.java:783)
	at org.infinispan.CacheImpl.put(CacheImpl.java:777)
	at org.infinispan.CacheImpl.put(CacheImpl.java:771)
	at org.infinispan.CacheSupport.put(CacheSupport.java:53)
	at org.radargun.cachewrappers.InfinispanWrapper.put(InfinispanWrapper.java:245)
	at org.radargun.cachewrappers.InfinispanExplicitLockingWrapper.put(InfinispanExplicitLockingWrapper.java:74)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.put(DataGridDecorator.java:85)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:484)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:333)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
2013-10-08 19:25:27,448 [Stressor-1] ERROR [org.infinispan.transaction.TransactionCoordinator] ISPN000188: Error while processing a commit in a two-phase transaction
org.infinispan.util.concurrent.TimeoutException: Replication timeout for deimos-esw-53962
	at org.infinispan.remoting.transport.AbstractTransport.parseResponseAndAddToResponseList(AbstractTransport.java:113)
	at org.infinispan.remoting.transport.jgroups.JGroupsTransport.invokeRemotely(JGroupsTransport.java:541)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:169)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:190)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:247)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:234)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:229)
	at org.infinispan.interceptors.ReplicationInterceptor.sendCommitCommand(ReplicationInterceptor.java:94)
	at org.infinispan.interceptors.ReplicationInterceptor.visitCommitCommand(ReplicationInterceptor.java:85)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.EntryWrappingInterceptor.visitCommitCommand(EntryWrappingInterceptor.java:116)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.interceptors.locking.AbstractTxLockingInterceptor.visitCommitCommand(AbstractTxLockingInterceptor.java:101)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.NotificationInterceptor.visitCommitCommand(NotificationInterceptor.java:65)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.TxInterceptor.visitCommitCommand(TxInterceptor.java:153)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.statetransfer.TransactionSynchronizerInterceptor.visitCommitCommand(TransactionSynchronizerInterceptor.java:73)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTopologyAffectedCommand(StateTransferInterceptor.java:216)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTxCommand(StateTransferInterceptor.java:189)
	at org.infinispan.statetransfer.StateTransferInterceptor.visitCommitCommand(StateTransferInterceptor.java:121)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleAll(InvocationContextInterceptor.java:128)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleDefault(InvocationContextInterceptor.java:92)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.InterceptorChain.invoke(InterceptorChain.java:343)
	at org.infinispan.transaction.TransactionCoordinator.commit(TransactionCoordinator.java:182)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.afterCompletion(SynchronizationAdapter.java:81)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.afterCompletion(SynchronizationImple.java:96)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.afterCompletion(TwoPhaseCoordinator.java:402)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:103)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.infinispan.CacheImpl.executeCommandAndCommitIfNeeded(CacheImpl.java:1196)
	at org.infinispan.CacheImpl.putInternal(CacheImpl.java:783)
	at org.infinispan.CacheImpl.put(CacheImpl.java:777)
	at org.infinispan.CacheImpl.put(CacheImpl.java:771)
	at org.infinispan.CacheSupport.put(CacheSupport.java:53)
	at org.radargun.cachewrappers.InfinispanWrapper.put(InfinispanWrapper.java:245)
	at org.radargun.cachewrappers.InfinispanExplicitLockingWrapper.put(InfinispanExplicitLockingWrapper.java:74)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.put(DataGridDecorator.java:85)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:484)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:333)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
2013-10-08 19:25:27,452 [Stressor-1] WARN  [com.arjuna.ats.jta] ARJUNA016029: SynchronizationImple.afterCompletion - failed for SynchronizationAdapter{localTransaction=LocalTransaction{remoteLockedNodes=[deimos-esw-40168, deimos-esw-35246, deimos-esw-55645, deimos-esw-54141, deimos-esw-46759, deimos-esw-3405, deimos-esw-40956, deimos-esw-53962, deimos-esw-26732, deimos-esw-50886, deimos-esw-14021, deimos-esw-5411], isMarkedForRollback=false, lockedKeys=null, backupKeyLocks=null, topologyId=6, isFromStateTransfer=false} org.infinispan.transaction.synchronization.SyncLocalTransaction@20a84} org.infinispan.transaction.synchronization.SynchronizationAdapter@20aa3 with exception
org.infinispan.CacheException: Could not commit.
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.afterCompletion(SynchronizationAdapter.java:83)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.afterCompletion(SynchronizationImple.java:96)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.afterCompletion(TwoPhaseCoordinator.java:402)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:103)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.infinispan.CacheImpl.executeCommandAndCommitIfNeeded(CacheImpl.java:1196)
	at org.infinispan.CacheImpl.putInternal(CacheImpl.java:783)
	at org.infinispan.CacheImpl.put(CacheImpl.java:777)
	at org.infinispan.CacheImpl.put(CacheImpl.java:771)
	at org.infinispan.CacheSupport.put(CacheSupport.java:53)
	at org.radargun.cachewrappers.InfinispanWrapper.put(InfinispanWrapper.java:245)
	at org.radargun.cachewrappers.InfinispanExplicitLockingWrapper.put(InfinispanExplicitLockingWrapper.java:74)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.put(DataGridDecorator.java:85)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:484)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:333)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
Caused by: javax.transaction.xa.XAException
	at org.infinispan.transaction.TransactionCoordinator.handleCommitFailure(TransactionCoordinator.java:224)
	at org.infinispan.transaction.TransactionCoordinator.commit(TransactionCoordinator.java:185)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.afterCompletion(SynchronizationAdapter.java:81)
	... 34 more
2013-10-08 19:25:27,455 [Stressor-1] WARN  [com.arjuna.ats.arjuna] ARJUNA012127: TwoPhaseCoordinator.afterCompletion - returned failure for SynchronizationImple< 0:ffff7f000001:886a:52544ac9:41509, SynchronizationAdapter{localTransaction=LocalTransaction{remoteLockedNodes=[deimos-esw-40168, deimos-esw-35246, deimos-esw-55645, deimos-esw-54141, deimos-esw-46759, deimos-esw-3405, deimos-esw-40956, deimos-esw-53962, deimos-esw-26732, deimos-esw-50886, deimos-esw-14021, deimos-esw-5411], isMarkedForRollback=false, lockedKeys=null, backupKeyLocks=null, topologyId=6, isFromStateTransfer=false} org.infinispan.transaction.synchronization.SyncLocalTransaction@20a84} org.infinispan.transaction.synchronization.SynchronizationAdapter@20aa3 >
2013-10-08 19:25:28,019 [Stressor-2] ERROR [org.infinispan.interceptors.InvocationContextInterceptor] ISPN000136: Execution error
org.infinispan.util.concurrent.TimeoutException: Replication timeout for deimos-esw-53962
	at org.infinispan.remoting.transport.AbstractTransport.parseResponseAndAddToResponseList(AbstractTransport.java:113)
	at org.infinispan.remoting.transport.jgroups.JGroupsTransport.invokeRemotely(JGroupsTransport.java:541)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:169)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:190)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:247)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:234)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:229)
	at org.infinispan.interceptors.ReplicationInterceptor.sendCommitCommand(ReplicationInterceptor.java:94)
	at org.infinispan.interceptors.ReplicationInterceptor.visitCommitCommand(ReplicationInterceptor.java:85)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.EntryWrappingInterceptor.visitCommitCommand(EntryWrappingInterceptor.java:116)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.interceptors.locking.AbstractTxLockingInterceptor.visitCommitCommand(AbstractTxLockingInterceptor.java:101)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.NotificationInterceptor.visitCommitCommand(NotificationInterceptor.java:65)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.TxInterceptor.visitCommitCommand(TxInterceptor.java:153)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.statetransfer.TransactionSynchronizerInterceptor.visitCommitCommand(TransactionSynchronizerInterceptor.java:73)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTopologyAffectedCommand(StateTransferInterceptor.java:216)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTxCommand(StateTransferInterceptor.java:189)
	at org.infinispan.statetransfer.StateTransferInterceptor.visitCommitCommand(StateTransferInterceptor.java:121)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleAll(InvocationContextInterceptor.java:128)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleDefault(InvocationContextInterceptor.java:92)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.InterceptorChain.invoke(InterceptorChain.java:343)
	at org.infinispan.transaction.TransactionCoordinator.commit(TransactionCoordinator.java:182)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.afterCompletion(SynchronizationAdapter.java:81)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.afterCompletion(SynchronizationImple.java:96)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.afterCompletion(TwoPhaseCoordinator.java:402)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:103)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.infinispan.CacheImpl.executeCommandAndCommitIfNeeded(CacheImpl.java:1196)
	at org.infinispan.CacheImpl.putInternal(CacheImpl.java:783)
	at org.infinispan.CacheImpl.put(CacheImpl.java:777)
	at org.infinispan.CacheImpl.put(CacheImpl.java:771)
	at org.infinispan.CacheSupport.put(CacheSupport.java:53)
	at org.radargun.cachewrappers.InfinispanWrapper.put(InfinispanWrapper.java:245)
	at org.radargun.cachewrappers.InfinispanExplicitLockingWrapper.put(InfinispanExplicitLockingWrapper.java:74)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.put(DataGridDecorator.java:85)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:484)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:333)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
2013-10-08 19:25:28,020 [Stressor-3] ERROR [org.infinispan.interceptors.InvocationContextInterceptor] ISPN000136: Execution error
org.infinispan.util.concurrent.TimeoutException: Replication timeout for deimos-esw-53962
	at org.infinispan.remoting.transport.AbstractTransport.parseResponseAndAddToResponseList(AbstractTransport.java:113)
	at org.infinispan.remoting.transport.jgroups.JGroupsTransport.invokeRemotely(JGroupsTransport.java:541)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:169)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:190)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:247)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:234)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:229)
	at org.infinispan.interceptors.ReplicationInterceptor.sendCommitCommand(ReplicationInterceptor.java:94)
	at org.infinispan.interceptors.ReplicationInterceptor.visitCommitCommand(ReplicationInterceptor.java:85)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.EntryWrappingInterceptor.visitCommitCommand(EntryWrappingInterceptor.java:116)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.interceptors.locking.AbstractTxLockingInterceptor.visitCommitCommand(AbstractTxLockingInterceptor.java:101)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.NotificationInterceptor.visitCommitCommand(NotificationInterceptor.java:65)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.TxInterceptor.visitCommitCommand(TxInterceptor.java:153)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.statetransfer.TransactionSynchronizerInterceptor.visitCommitCommand(TransactionSynchronizerInterceptor.java:73)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTopologyAffectedCommand(StateTransferInterceptor.java:216)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTxCommand(StateTransferInterceptor.java:189)
	at org.infinispan.statetransfer.StateTransferInterceptor.visitCommitCommand(StateTransferInterceptor.java:121)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleAll(InvocationContextInterceptor.java:128)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleDefault(InvocationContextInterceptor.java:92)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.InterceptorChain.invoke(InterceptorChain.java:343)
	at org.infinispan.transaction.TransactionCoordinator.commit(TransactionCoordinator.java:182)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.afterCompletion(SynchronizationAdapter.java:81)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.afterCompletion(SynchronizationImple.java:96)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.afterCompletion(TwoPhaseCoordinator.java:402)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:103)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.infinispan.CacheImpl.executeCommandAndCommitIfNeeded(CacheImpl.java:1196)
	at org.infinispan.CacheImpl.putInternal(CacheImpl.java:783)
	at org.infinispan.CacheImpl.put(CacheImpl.java:777)
	at org.infinispan.CacheImpl.put(CacheImpl.java:771)
	at org.infinispan.CacheSupport.put(CacheSupport.java:53)
	at org.radargun.cachewrappers.InfinispanWrapper.put(InfinispanWrapper.java:245)
	at org.radargun.cachewrappers.InfinispanExplicitLockingWrapper.put(InfinispanExplicitLockingWrapper.java:74)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.put(DataGridDecorator.java:85)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:484)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:333)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
2013-10-08 19:25:28,023 [Stressor-2] ERROR [org.infinispan.transaction.TransactionCoordinator] ISPN000188: Error while processing a commit in a two-phase transaction
org.infinispan.util.concurrent.TimeoutException: Replication timeout for deimos-esw-53962
	at org.infinispan.remoting.transport.AbstractTransport.parseResponseAndAddToResponseList(AbstractTransport.java:113)
	at org.infinispan.remoting.transport.jgroups.JGroupsTransport.invokeRemotely(JGroupsTransport.java:541)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:169)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:190)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:247)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:234)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:229)
	at org.infinispan.interceptors.ReplicationInterceptor.sendCommitCommand(ReplicationInterceptor.java:94)
	at org.infinispan.interceptors.ReplicationInterceptor.visitCommitCommand(ReplicationInterceptor.java:85)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.EntryWrappingInterceptor.visitCommitCommand(EntryWrappingInterceptor.java:116)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.interceptors.locking.AbstractTxLockingInterceptor.visitCommitCommand(AbstractTxLockingInterceptor.java:101)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.NotificationInterceptor.visitCommitCommand(NotificationInterceptor.java:65)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.TxInterceptor.visitCommitCommand(TxInterceptor.java:153)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.statetransfer.TransactionSynchronizerInterceptor.visitCommitCommand(TransactionSynchronizerInterceptor.java:73)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTopologyAffectedCommand(StateTransferInterceptor.java:216)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTxCommand(StateTransferInterceptor.java:189)
	at org.infinispan.statetransfer.StateTransferInterceptor.visitCommitCommand(StateTransferInterceptor.java:121)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleAll(InvocationContextInterceptor.java:128)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleDefault(InvocationContextInterceptor.java:92)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.InterceptorChain.invoke(InterceptorChain.java:343)
	at org.infinispan.transaction.TransactionCoordinator.commit(TransactionCoordinator.java:182)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.afterCompletion(SynchronizationAdapter.java:81)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.afterCompletion(SynchronizationImple.java:96)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.afterCompletion(TwoPhaseCoordinator.java:402)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:103)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.infinispan.CacheImpl.executeCommandAndCommitIfNeeded(CacheImpl.java:1196)
	at org.infinispan.CacheImpl.putInternal(CacheImpl.java:783)
	at org.infinispan.CacheImpl.put(CacheImpl.java:777)
	at org.infinispan.CacheImpl.put(CacheImpl.java:771)
	at org.infinispan.CacheSupport.put(CacheSupport.java:53)
	at org.radargun.cachewrappers.InfinispanWrapper.put(InfinispanWrapper.java:245)
	at org.radargun.cachewrappers.InfinispanExplicitLockingWrapper.put(InfinispanExplicitLockingWrapper.java:74)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.put(DataGridDecorator.java:85)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:484)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:333)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
2013-10-08 19:25:28,027 [Stressor-3] ERROR [org.infinispan.transaction.TransactionCoordinator] ISPN000188: Error while processing a commit in a two-phase transaction
org.infinispan.util.concurrent.TimeoutException: Replication timeout for deimos-esw-53962
	at org.infinispan.remoting.transport.AbstractTransport.parseResponseAndAddToResponseList(AbstractTransport.java:113)
	at org.infinispan.remoting.transport.jgroups.JGroupsTransport.invokeRemotely(JGroupsTransport.java:541)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:169)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:190)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:247)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:234)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:229)
	at org.infinispan.interceptors.ReplicationInterceptor.sendCommitCommand(ReplicationInterceptor.java:94)
	at org.infinispan.interceptors.ReplicationInterceptor.visitCommitCommand(ReplicationInterceptor.java:85)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.EntryWrappingInterceptor.visitCommitCommand(EntryWrappingInterceptor.java:116)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.interceptors.locking.AbstractTxLockingInterceptor.visitCommitCommand(AbstractTxLockingInterceptor.java:101)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.NotificationInterceptor.visitCommitCommand(NotificationInterceptor.java:65)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.TxInterceptor.visitCommitCommand(TxInterceptor.java:153)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.statetransfer.TransactionSynchronizerInterceptor.visitCommitCommand(TransactionSynchronizerInterceptor.java:73)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTopologyAffectedCommand(StateTransferInterceptor.java:216)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTxCommand(StateTransferInterceptor.java:189)
	at org.infinispan.statetransfer.StateTransferInterceptor.visitCommitCommand(StateTransferInterceptor.java:121)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleAll(InvocationContextInterceptor.java:128)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleDefault(InvocationContextInterceptor.java:92)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.InterceptorChain.invoke(InterceptorChain.java:343)
	at org.infinispan.transaction.TransactionCoordinator.commit(TransactionCoordinator.java:182)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.afterCompletion(SynchronizationAdapter.java:81)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.afterCompletion(SynchronizationImple.java:96)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.afterCompletion(TwoPhaseCoordinator.java:402)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:103)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.infinispan.CacheImpl.executeCommandAndCommitIfNeeded(CacheImpl.java:1196)
	at org.infinispan.CacheImpl.putInternal(CacheImpl.java:783)
	at org.infinispan.CacheImpl.put(CacheImpl.java:777)
	at org.infinispan.CacheImpl.put(CacheImpl.java:771)
	at org.infinispan.CacheSupport.put(CacheSupport.java:53)
	at org.radargun.cachewrappers.InfinispanWrapper.put(InfinispanWrapper.java:245)
	at org.radargun.cachewrappers.InfinispanExplicitLockingWrapper.put(InfinispanExplicitLockingWrapper.java:74)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.put(DataGridDecorator.java:85)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:484)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:333)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
2013-10-08 19:25:28,030 [Stressor-2] WARN  [com.arjuna.ats.jta] ARJUNA016029: SynchronizationImple.afterCompletion - failed for SynchronizationAdapter{localTransaction=LocalTransaction{remoteLockedNodes=[deimos-esw-40168, deimos-esw-35246, deimos-esw-55645, deimos-esw-54141, deimos-esw-46759, deimos-esw-3405, deimos-esw-40956, deimos-esw-53962, deimos-esw-26732, deimos-esw-50886, deimos-esw-14021, deimos-esw-5411], isMarkedForRollback=false, lockedKeys=null, backupKeyLocks=null, topologyId=6, isFromStateTransfer=false} org.infinispan.transaction.synchronization.SyncLocalTransaction@20a8e} org.infinispan.transaction.synchronization.SynchronizationAdapter@20aad with exception
org.infinispan.CacheException: Could not commit.
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.afterCompletion(SynchronizationAdapter.java:83)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.afterCompletion(SynchronizationImple.java:96)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.afterCompletion(TwoPhaseCoordinator.java:402)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:103)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.infinispan.CacheImpl.executeCommandAndCommitIfNeeded(CacheImpl.java:1196)
	at org.infinispan.CacheImpl.putInternal(CacheImpl.java:783)
	at org.infinispan.CacheImpl.put(CacheImpl.java:777)
	at org.infinispan.CacheImpl.put(CacheImpl.java:771)
	at org.infinispan.CacheSupport.put(CacheSupport.java:53)
	at org.radargun.cachewrappers.InfinispanWrapper.put(InfinispanWrapper.java:245)
	at org.radargun.cachewrappers.InfinispanExplicitLockingWrapper.put(InfinispanExplicitLockingWrapper.java:74)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.put(DataGridDecorator.java:85)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:484)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:333)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
Caused by: javax.transaction.xa.XAException
	at org.infinispan.transaction.TransactionCoordinator.handleCommitFailure(TransactionCoordinator.java:224)
	at org.infinispan.transaction.TransactionCoordinator.commit(TransactionCoordinator.java:185)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.afterCompletion(SynchronizationAdapter.java:81)
	... 34 more
2013-10-08 19:25:28,033 [Stressor-3] WARN  [com.arjuna.ats.jta] ARJUNA016029: SynchronizationImple.afterCompletion - failed for SynchronizationAdapter{localTransaction=LocalTransaction{remoteLockedNodes=[deimos-esw-40168, deimos-esw-35246, deimos-esw-55645, deimos-esw-54141, deimos-esw-46759, deimos-esw-3405, deimos-esw-40956, deimos-esw-53962, deimos-esw-26732, deimos-esw-50886, deimos-esw-14021, deimos-esw-5411], isMarkedForRollback=false, lockedKeys=null, backupKeyLocks=null, topologyId=6, isFromStateTransfer=false} org.infinispan.transaction.synchronization.SyncLocalTransaction@20a8f} org.infinispan.transaction.synchronization.SynchronizationAdapter@20aae with exception
org.infinispan.CacheException: Could not commit.
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.afterCompletion(SynchronizationAdapter.java:83)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.afterCompletion(SynchronizationImple.java:96)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.afterCompletion(TwoPhaseCoordinator.java:402)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:103)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.infinispan.CacheImpl.executeCommandAndCommitIfNeeded(CacheImpl.java:1196)
	at org.infinispan.CacheImpl.putInternal(CacheImpl.java:783)
	at org.infinispan.CacheImpl.put(CacheImpl.java:777)
	at org.infinispan.CacheImpl.put(CacheImpl.java:771)
	at org.infinispan.CacheSupport.put(CacheSupport.java:53)
	at org.radargun.cachewrappers.InfinispanWrapper.put(InfinispanWrapper.java:245)
	at org.radargun.cachewrappers.InfinispanExplicitLockingWrapper.put(InfinispanExplicitLockingWrapper.java:74)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.put(DataGridDecorator.java:85)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:484)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:333)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
Caused by: javax.transaction.xa.XAException
	at org.infinispan.transaction.TransactionCoordinator.handleCommitFailure(TransactionCoordinator.java:224)
	at org.infinispan.transaction.TransactionCoordinator.commit(TransactionCoordinator.java:185)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.afterCompletion(SynchronizationAdapter.java:81)
	... 34 more
2013-10-08 19:25:28,034 [Stressor-2] WARN  [com.arjuna.ats.arjuna] ARJUNA012127: TwoPhaseCoordinator.afterCompletion - returned failure for SynchronizationImple< 0:ffff7f000001:886a:52544ac9:4151d, SynchronizationAdapter{localTransaction=LocalTransaction{remoteLockedNodes=[deimos-esw-40168, deimos-esw-35246, deimos-esw-55645, deimos-esw-54141, deimos-esw-46759, deimos-esw-3405, deimos-esw-40956, deimos-esw-53962, deimos-esw-26732, deimos-esw-50886, deimos-esw-14021, deimos-esw-5411], isMarkedForRollback=false, lockedKeys=null, backupKeyLocks=null, topologyId=6, isFromStateTransfer=false} org.infinispan.transaction.synchronization.SyncLocalTransaction@20a8e} org.infinispan.transaction.synchronization.SynchronizationAdapter@20aad >
2013-10-08 19:25:28,036 [Stressor-3] WARN  [com.arjuna.ats.arjuna] ARJUNA012127: TwoPhaseCoordinator.afterCompletion - returned failure for SynchronizationImple< 0:ffff7f000001:886a:52544ac9:4151f, SynchronizationAdapter{localTransaction=LocalTransaction{remoteLockedNodes=[deimos-esw-40168, deimos-esw-35246, deimos-esw-55645, deimos-esw-54141, deimos-esw-46759, deimos-esw-3405, deimos-esw-40956, deimos-esw-53962, deimos-esw-26732, deimos-esw-50886, deimos-esw-14021, deimos-esw-5411], isMarkedForRollback=false, lockedKeys=null, backupKeyLocks=null, topologyId=6, isFromStateTransfer=false} org.infinispan.transaction.synchronization.SyncLocalTransaction@20a8f} org.infinispan.transaction.synchronization.SynchronizationAdapter@20aae >
2013-10-08 19:25:28,039 [Stressor-0] ERROR [org.infinispan.interceptors.InvocationContextInterceptor] ISPN000136: Execution error
org.infinispan.util.concurrent.TimeoutException: Replication timeout for deimos-esw-53962
	at org.infinispan.remoting.transport.AbstractTransport.parseResponseAndAddToResponseList(AbstractTransport.java:113)
	at org.infinispan.remoting.transport.jgroups.JGroupsTransport.invokeRemotely(JGroupsTransport.java:541)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:169)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:190)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:247)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:234)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:229)
	at org.infinispan.interceptors.ReplicationInterceptor.sendCommitCommand(ReplicationInterceptor.java:94)
	at org.infinispan.interceptors.ReplicationInterceptor.visitCommitCommand(ReplicationInterceptor.java:85)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.EntryWrappingInterceptor.visitCommitCommand(EntryWrappingInterceptor.java:116)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.interceptors.locking.AbstractTxLockingInterceptor.visitCommitCommand(AbstractTxLockingInterceptor.java:101)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.NotificationInterceptor.visitCommitCommand(NotificationInterceptor.java:65)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.TxInterceptor.visitCommitCommand(TxInterceptor.java:153)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.statetransfer.TransactionSynchronizerInterceptor.visitCommitCommand(TransactionSynchronizerInterceptor.java:73)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTopologyAffectedCommand(StateTransferInterceptor.java:216)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTxCommand(StateTransferInterceptor.java:189)
	at org.infinispan.statetransfer.StateTransferInterceptor.visitCommitCommand(StateTransferInterceptor.java:121)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleAll(InvocationContextInterceptor.java:128)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleDefault(InvocationContextInterceptor.java:92)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.InterceptorChain.invoke(InterceptorChain.java:343)
	at org.infinispan.transaction.TransactionCoordinator.commit(TransactionCoordinator.java:182)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.afterCompletion(SynchronizationAdapter.java:81)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.afterCompletion(SynchronizationImple.java:96)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.afterCompletion(TwoPhaseCoordinator.java:402)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:103)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.radargun.cachewrappers.InfinispanWrapper.endTransaction(InfinispanWrapper.java:330)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.commitTransaction(DataGridDecorator.java:123)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:348)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
2013-10-08 19:25:28,042 [Stressor-0] ERROR [org.infinispan.transaction.TransactionCoordinator] ISPN000188: Error while processing a commit in a two-phase transaction
org.infinispan.util.concurrent.TimeoutException: Replication timeout for deimos-esw-53962
	at org.infinispan.remoting.transport.AbstractTransport.parseResponseAndAddToResponseList(AbstractTransport.java:113)
	at org.infinispan.remoting.transport.jgroups.JGroupsTransport.invokeRemotely(JGroupsTransport.java:541)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:169)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:190)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:247)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:234)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:229)
	at org.infinispan.interceptors.ReplicationInterceptor.sendCommitCommand(ReplicationInterceptor.java:94)
	at org.infinispan.interceptors.ReplicationInterceptor.visitCommitCommand(ReplicationInterceptor.java:85)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.EntryWrappingInterceptor.visitCommitCommand(EntryWrappingInterceptor.java:116)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.interceptors.locking.AbstractTxLockingInterceptor.visitCommitCommand(AbstractTxLockingInterceptor.java:101)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.NotificationInterceptor.visitCommitCommand(NotificationInterceptor.java:65)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.TxInterceptor.visitCommitCommand(TxInterceptor.java:153)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.statetransfer.TransactionSynchronizerInterceptor.visitCommitCommand(TransactionSynchronizerInterceptor.java:73)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTopologyAffectedCommand(StateTransferInterceptor.java:216)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTxCommand(StateTransferInterceptor.java:189)
	at org.infinispan.statetransfer.StateTransferInterceptor.visitCommitCommand(StateTransferInterceptor.java:121)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleAll(InvocationContextInterceptor.java:128)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleDefault(InvocationContextInterceptor.java:92)
	at org.infinispan.commands.AbstractVisitor.visitCommitCommand(AbstractVisitor.java:136)
	at org.infinispan.commands.tx.CommitCommand.acceptVisitor(CommitCommand.java:60)
	at org.infinispan.interceptors.InterceptorChain.invoke(InterceptorChain.java:343)
	at org.infinispan.transaction.TransactionCoordinator.commit(TransactionCoordinator.java:182)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.afterCompletion(SynchronizationAdapter.java:81)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.afterCompletion(SynchronizationImple.java:96)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.afterCompletion(TwoPhaseCoordinator.java:402)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:103)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.radargun.cachewrappers.InfinispanWrapper.endTransaction(InfinispanWrapper.java:330)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.commitTransaction(DataGridDecorator.java:123)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:348)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
2013-10-08 19:25:28,045 [Stressor-0] WARN  [com.arjuna.ats.jta] ARJUNA016029: SynchronizationImple.afterCompletion - failed for SynchronizationAdapter{localTransaction=LocalTransaction{remoteLockedNodes=[deimos-esw-40168, deimos-esw-35246, deimos-esw-55645, deimos-esw-54141, deimos-esw-46759, deimos-esw-3405, deimos-esw-40956, deimos-esw-53962, deimos-esw-26732, deimos-esw-50886, deimos-esw-14021, deimos-esw-5411], isMarkedForRollback=false, lockedKeys=null, backupKeyLocks=null, topologyId=6, isFromStateTransfer=false} org.infinispan.transaction.synchronization.SyncLocalTransaction@20a81} org.infinispan.transaction.synchronization.SynchronizationAdapter@20aa0 with exception
org.infinispan.CacheException: Could not commit.
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.afterCompletion(SynchronizationAdapter.java:83)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.afterCompletion(SynchronizationImple.java:96)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.afterCompletion(TwoPhaseCoordinator.java:402)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:103)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.radargun.cachewrappers.InfinispanWrapper.endTransaction(InfinispanWrapper.java:330)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.commitTransaction(DataGridDecorator.java:123)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:348)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
Caused by: javax.transaction.xa.XAException
	at org.infinispan.transaction.TransactionCoordinator.handleCommitFailure(TransactionCoordinator.java:224)
	at org.infinispan.transaction.TransactionCoordinator.commit(TransactionCoordinator.java:185)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.afterCompletion(SynchronizationAdapter.java:81)
	... 26 more
2013-10-08 19:25:28,046 [Stressor-0] WARN  [com.arjuna.ats.arjuna] ARJUNA012127: TwoPhaseCoordinator.afterCompletion - returned failure for SynchronizationImple< 0:ffff7f000001:886a:52544ac9:41503, SynchronizationAdapter{localTransaction=LocalTransaction{remoteLockedNodes=[deimos-esw-40168, deimos-esw-35246, deimos-esw-55645, deimos-esw-54141, deimos-esw-46759, deimos-esw-3405, deimos-esw-40956, deimos-esw-53962, deimos-esw-26732, deimos-esw-50886, deimos-esw-14021, deimos-esw-5411], isMarkedForRollback=false, lockedKeys=null, backupKeyLocks=null, topologyId=6, isFromStateTransfer=false} org.infinispan.transaction.synchronization.SyncLocalTransaction@20a81} org.infinispan.transaction.synchronization.SynchronizationAdapter@20aa0 >
2013-10-08 19:25:28,076 [Stressor-0] INFO  [org.radargun.stressors.StressTestStressor] Number of ops executed so far: 320000. Elapsed time: 1 mins 3 secs. Remaining: 0.000 secs. Total: 1 mins 0 secs
2013-10-08 19:25:36,298 [Stressor-2] ERROR [org.infinispan.interceptors.InvocationContextInterceptor] ISPN000136: Execution error
org.infinispan.remoting.transport.jgroups.SuspectException: Suspected member: deimos-esw-53962
	at org.infinispan.remoting.transport.AbstractTransport.parseResponseAndAddToResponseList(AbstractTransport.java:105)
	at org.infinispan.remoting.transport.jgroups.JGroupsTransport.invokeRemotely(JGroupsTransport.java:541)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:169)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:190)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:247)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:234)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:229)
	at org.infinispan.remoting.rpc.RpcManagerImpl.broadcastRpcCommand(RpcManagerImpl.java:208)
	at org.infinispan.interceptors.ReplicationInterceptor.broadcastPrepare(ReplicationInterceptor.java:109)
	at org.infinispan.interceptors.ReplicationInterceptor.visitPrepareCommand(ReplicationInterceptor.java:101)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.DeadlockDetectingInterceptor.visitPrepareCommand(DeadlockDetectingInterceptor.java:107)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.EntryWrappingInterceptor.visitPrepareCommand(EntryWrappingInterceptor.java:106)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.locking.AbstractTxLockingInterceptor.invokeNextAndCommitIf1Pc(AbstractTxLockingInterceptor.java:108)
	at org.infinispan.interceptors.locking.OptimisticLockingInterceptor.visitPrepareCommand(OptimisticLockingInterceptor.java:135)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.NotificationInterceptor.visitPrepareCommand(NotificationInterceptor.java:58)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.TxInterceptor.invokeNextInterceptorAndVerifyTransaction(TxInterceptor.java:128)
	at org.infinispan.interceptors.TxInterceptor.visitPrepareCommand(TxInterceptor.java:115)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitPrepareCommand(AbstractVisitor.java:126)
	at org.infinispan.statetransfer.TransactionSynchronizerInterceptor.visitPrepareCommand(TransactionSynchronizerInterceptor.java:61)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTopologyAffectedCommand(StateTransferInterceptor.java:216)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTxCommand(StateTransferInterceptor.java:189)
	at org.infinispan.statetransfer.StateTransferInterceptor.visitPrepareCommand(StateTransferInterceptor.java:93)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitPrepareCommand(AbstractVisitor.java:126)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleAll(InvocationContextInterceptor.java:128)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleDefault(InvocationContextInterceptor.java:92)
	at org.infinispan.commands.AbstractVisitor.visitPrepareCommand(AbstractVisitor.java:126)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.InterceptorChain.invoke(InterceptorChain.java:343)
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:141)
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:123)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.beforeCompletion(SynchronizationAdapter.java:68)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.beforeCompletion(SynchronizationImple.java:76)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.beforeCompletion(TwoPhaseCoordinator.java:273)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:93)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.infinispan.CacheImpl.executeCommandAndCommitIfNeeded(CacheImpl.java:1196)
	at org.infinispan.CacheImpl.putInternal(CacheImpl.java:783)
	at org.infinispan.CacheImpl.put(CacheImpl.java:777)
	at org.infinispan.CacheImpl.put(CacheImpl.java:771)
	at org.infinispan.CacheSupport.put(CacheSupport.java:53)
	at org.radargun.cachewrappers.InfinispanWrapper.put(InfinispanWrapper.java:245)
	at org.radargun.cachewrappers.InfinispanExplicitLockingWrapper.put(InfinispanExplicitLockingWrapper.java:74)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.put(DataGridDecorator.java:85)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:484)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:333)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
2013-10-08 19:25:36,298 [Stressor-3] ERROR [org.infinispan.interceptors.InvocationContextInterceptor] ISPN000136: Execution error
org.infinispan.remoting.transport.jgroups.SuspectException: Suspected member: deimos-esw-53962
	at org.infinispan.remoting.transport.AbstractTransport.parseResponseAndAddToResponseList(AbstractTransport.java:105)
	at org.infinispan.remoting.transport.jgroups.JGroupsTransport.invokeRemotely(JGroupsTransport.java:541)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:169)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:190)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:247)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:234)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:229)
	at org.infinispan.remoting.rpc.RpcManagerImpl.broadcastRpcCommand(RpcManagerImpl.java:208)
	at org.infinispan.interceptors.ReplicationInterceptor.broadcastPrepare(ReplicationInterceptor.java:109)
	at org.infinispan.interceptors.ReplicationInterceptor.visitPrepareCommand(ReplicationInterceptor.java:101)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.DeadlockDetectingInterceptor.visitPrepareCommand(DeadlockDetectingInterceptor.java:107)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.EntryWrappingInterceptor.visitPrepareCommand(EntryWrappingInterceptor.java:106)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.locking.AbstractTxLockingInterceptor.invokeNextAndCommitIf1Pc(AbstractTxLockingInterceptor.java:108)
	at org.infinispan.interceptors.locking.OptimisticLockingInterceptor.visitPrepareCommand(OptimisticLockingInterceptor.java:135)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.NotificationInterceptor.visitPrepareCommand(NotificationInterceptor.java:58)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.TxInterceptor.invokeNextInterceptorAndVerifyTransaction(TxInterceptor.java:128)
	at org.infinispan.interceptors.TxInterceptor.visitPrepareCommand(TxInterceptor.java:115)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitPrepareCommand(AbstractVisitor.java:126)
	at org.infinispan.statetransfer.TransactionSynchronizerInterceptor.visitPrepareCommand(TransactionSynchronizerInterceptor.java:61)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTopologyAffectedCommand(StateTransferInterceptor.java:216)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTxCommand(StateTransferInterceptor.java:189)
	at org.infinispan.statetransfer.StateTransferInterceptor.visitPrepareCommand(StateTransferInterceptor.java:93)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitPrepareCommand(AbstractVisitor.java:126)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleAll(InvocationContextInterceptor.java:128)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleDefault(InvocationContextInterceptor.java:92)
	at org.infinispan.commands.AbstractVisitor.visitPrepareCommand(AbstractVisitor.java:126)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.InterceptorChain.invoke(InterceptorChain.java:343)
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:141)
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:123)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.beforeCompletion(SynchronizationAdapter.java:68)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.beforeCompletion(SynchronizationImple.java:76)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.beforeCompletion(TwoPhaseCoordinator.java:273)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:93)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.infinispan.CacheImpl.executeCommandAndCommitIfNeeded(CacheImpl.java:1196)
	at org.infinispan.CacheImpl.putInternal(CacheImpl.java:783)
	at org.infinispan.CacheImpl.put(CacheImpl.java:777)
	at org.infinispan.CacheImpl.put(CacheImpl.java:771)
	at org.infinispan.CacheSupport.put(CacheSupport.java:53)
	at org.radargun.cachewrappers.InfinispanWrapper.put(InfinispanWrapper.java:245)
	at org.radargun.cachewrappers.InfinispanExplicitLockingWrapper.put(InfinispanExplicitLockingWrapper.java:74)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.put(DataGridDecorator.java:85)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:484)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:333)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
2013-10-08 19:25:36,298 [Stressor-1] ERROR [org.infinispan.interceptors.InvocationContextInterceptor] ISPN000136: Execution error
org.infinispan.remoting.transport.jgroups.SuspectException: Suspected member: deimos-esw-53962
	at org.infinispan.remoting.transport.AbstractTransport.parseResponseAndAddToResponseList(AbstractTransport.java:105)
	at org.infinispan.remoting.transport.jgroups.JGroupsTransport.invokeRemotely(JGroupsTransport.java:541)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:169)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:190)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:247)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:234)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:229)
	at org.infinispan.remoting.rpc.RpcManagerImpl.broadcastRpcCommand(RpcManagerImpl.java:208)
	at org.infinispan.interceptors.ReplicationInterceptor.broadcastPrepare(ReplicationInterceptor.java:109)
	at org.infinispan.interceptors.ReplicationInterceptor.visitPrepareCommand(ReplicationInterceptor.java:101)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.DeadlockDetectingInterceptor.visitPrepareCommand(DeadlockDetectingInterceptor.java:107)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.EntryWrappingInterceptor.visitPrepareCommand(EntryWrappingInterceptor.java:106)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.locking.AbstractTxLockingInterceptor.invokeNextAndCommitIf1Pc(AbstractTxLockingInterceptor.java:108)
	at org.infinispan.interceptors.locking.OptimisticLockingInterceptor.visitPrepareCommand(OptimisticLockingInterceptor.java:135)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.NotificationInterceptor.visitPrepareCommand(NotificationInterceptor.java:58)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.TxInterceptor.invokeNextInterceptorAndVerifyTransaction(TxInterceptor.java:128)
	at org.infinispan.interceptors.TxInterceptor.visitPrepareCommand(TxInterceptor.java:115)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitPrepareCommand(AbstractVisitor.java:126)
	at org.infinispan.statetransfer.TransactionSynchronizerInterceptor.visitPrepareCommand(TransactionSynchronizerInterceptor.java:61)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTopologyAffectedCommand(StateTransferInterceptor.java:216)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTxCommand(StateTransferInterceptor.java:189)
	at org.infinispan.statetransfer.StateTransferInterceptor.visitPrepareCommand(StateTransferInterceptor.java:93)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitPrepareCommand(AbstractVisitor.java:126)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleAll(InvocationContextInterceptor.java:128)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleDefault(InvocationContextInterceptor.java:92)
	at org.infinispan.commands.AbstractVisitor.visitPrepareCommand(AbstractVisitor.java:126)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.InterceptorChain.invoke(InterceptorChain.java:343)
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:141)
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:123)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.beforeCompletion(SynchronizationAdapter.java:68)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.beforeCompletion(SynchronizationImple.java:76)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.beforeCompletion(TwoPhaseCoordinator.java:273)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:93)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.infinispan.CacheImpl.executeCommandAndCommitIfNeeded(CacheImpl.java:1196)
	at org.infinispan.CacheImpl.putInternal(CacheImpl.java:783)
	at org.infinispan.CacheImpl.put(CacheImpl.java:777)
	at org.infinispan.CacheImpl.put(CacheImpl.java:771)
	at org.infinispan.CacheSupport.put(CacheSupport.java:53)
	at org.radargun.cachewrappers.InfinispanWrapper.put(InfinispanWrapper.java:245)
	at org.radargun.cachewrappers.InfinispanExplicitLockingWrapper.put(InfinispanExplicitLockingWrapper.java:74)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.put(DataGridDecorator.java:85)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:484)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:333)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
2013-10-08 19:25:36,304 [Stressor-3] ERROR [org.infinispan.transaction.TransactionCoordinator] Error while processing prepare
org.infinispan.remoting.transport.jgroups.SuspectException: Suspected member: deimos-esw-53962
	at org.infinispan.remoting.transport.AbstractTransport.parseResponseAndAddToResponseList(AbstractTransport.java:105)
	at org.infinispan.remoting.transport.jgroups.JGroupsTransport.invokeRemotely(JGroupsTransport.java:541)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:169)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:190)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:247)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:234)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:229)
	at org.infinispan.remoting.rpc.RpcManagerImpl.broadcastRpcCommand(RpcManagerImpl.java:208)
	at org.infinispan.interceptors.ReplicationInterceptor.broadcastPrepare(ReplicationInterceptor.java:109)
	at org.infinispan.interceptors.ReplicationInterceptor.visitPrepareCommand(ReplicationInterceptor.java:101)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.DeadlockDetectingInterceptor.visitPrepareCommand(DeadlockDetectingInterceptor.java:107)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.EntryWrappingInterceptor.visitPrepareCommand(EntryWrappingInterceptor.java:106)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.locking.AbstractTxLockingInterceptor.invokeNextAndCommitIf1Pc(AbstractTxLockingInterceptor.java:108)
	at org.infinispan.interceptors.locking.OptimisticLockingInterceptor.visitPrepareCommand(OptimisticLockingInterceptor.java:135)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.NotificationInterceptor.visitPrepareCommand(NotificationInterceptor.java:58)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.TxInterceptor.invokeNextInterceptorAndVerifyTransaction(TxInterceptor.java:128)
	at org.infinispan.interceptors.TxInterceptor.visitPrepareCommand(TxInterceptor.java:115)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitPrepareCommand(AbstractVisitor.java:126)
	at org.infinispan.statetransfer.TransactionSynchronizerInterceptor.visitPrepareCommand(TransactionSynchronizerInterceptor.java:61)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTopologyAffectedCommand(StateTransferInterceptor.java:216)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTxCommand(StateTransferInterceptor.java:189)
	at org.infinispan.statetransfer.StateTransferInterceptor.visitPrepareCommand(StateTransferInterceptor.java:93)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitPrepareCommand(AbstractVisitor.java:126)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleAll(InvocationContextInterceptor.java:128)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleDefault(InvocationContextInterceptor.java:92)
	at org.infinispan.commands.AbstractVisitor.visitPrepareCommand(AbstractVisitor.java:126)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.InterceptorChain.invoke(InterceptorChain.java:343)
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:141)
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:123)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.beforeCompletion(SynchronizationAdapter.java:68)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.beforeCompletion(SynchronizationImple.java:76)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.beforeCompletion(TwoPhaseCoordinator.java:273)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:93)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.infinispan.CacheImpl.executeCommandAndCommitIfNeeded(CacheImpl.java:1196)
	at org.infinispan.CacheImpl.putInternal(CacheImpl.java:783)
	at org.infinispan.CacheImpl.put(CacheImpl.java:777)
	at org.infinispan.CacheImpl.put(CacheImpl.java:771)
	at org.infinispan.CacheSupport.put(CacheSupport.java:53)
	at org.radargun.cachewrappers.InfinispanWrapper.put(InfinispanWrapper.java:245)
	at org.radargun.cachewrappers.InfinispanExplicitLockingWrapper.put(InfinispanExplicitLockingWrapper.java:74)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.put(DataGridDecorator.java:85)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:484)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:333)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
2013-10-08 19:25:36,301 [Stressor-2] ERROR [org.infinispan.transaction.TransactionCoordinator] Error while processing prepare
org.infinispan.remoting.transport.jgroups.SuspectException: Suspected member: deimos-esw-53962
	at org.infinispan.remoting.transport.AbstractTransport.parseResponseAndAddToResponseList(AbstractTransport.java:105)
	at org.infinispan.remoting.transport.jgroups.JGroupsTransport.invokeRemotely(JGroupsTransport.java:541)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:169)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:190)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:247)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:234)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:229)
	at org.infinispan.remoting.rpc.RpcManagerImpl.broadcastRpcCommand(RpcManagerImpl.java:208)
	at org.infinispan.interceptors.ReplicationInterceptor.broadcastPrepare(ReplicationInterceptor.java:109)
	at org.infinispan.interceptors.ReplicationInterceptor.visitPrepareCommand(ReplicationInterceptor.java:101)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.DeadlockDetectingInterceptor.visitPrepareCommand(DeadlockDetectingInterceptor.java:107)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.EntryWrappingInterceptor.visitPrepareCommand(EntryWrappingInterceptor.java:106)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.locking.AbstractTxLockingInterceptor.invokeNextAndCommitIf1Pc(AbstractTxLockingInterceptor.java:108)
	at org.infinispan.interceptors.locking.OptimisticLockingInterceptor.visitPrepareCommand(OptimisticLockingInterceptor.java:135)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.NotificationInterceptor.visitPrepareCommand(NotificationInterceptor.java:58)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.TxInterceptor.invokeNextInterceptorAndVerifyTransaction(TxInterceptor.java:128)
	at org.infinispan.interceptors.TxInterceptor.visitPrepareCommand(TxInterceptor.java:115)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitPrepareCommand(AbstractVisitor.java:126)
	at org.infinispan.statetransfer.TransactionSynchronizerInterceptor.visitPrepareCommand(TransactionSynchronizerInterceptor.java:61)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTopologyAffectedCommand(StateTransferInterceptor.java:216)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTxCommand(StateTransferInterceptor.java:189)
	at org.infinispan.statetransfer.StateTransferInterceptor.visitPrepareCommand(StateTransferInterceptor.java:93)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitPrepareCommand(AbstractVisitor.java:126)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleAll(InvocationContextInterceptor.java:128)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleDefault(InvocationContextInterceptor.java:92)
	at org.infinispan.commands.AbstractVisitor.visitPrepareCommand(AbstractVisitor.java:126)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.InterceptorChain.invoke(InterceptorChain.java:343)
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:141)
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:123)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.beforeCompletion(SynchronizationAdapter.java:68)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.beforeCompletion(SynchronizationImple.java:76)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.beforeCompletion(TwoPhaseCoordinator.java:273)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:93)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.infinispan.CacheImpl.executeCommandAndCommitIfNeeded(CacheImpl.java:1196)
	at org.infinispan.CacheImpl.putInternal(CacheImpl.java:783)
	at org.infinispan.CacheImpl.put(CacheImpl.java:777)
	at org.infinispan.CacheImpl.put(CacheImpl.java:771)
	at org.infinispan.CacheSupport.put(CacheSupport.java:53)
	at org.radargun.cachewrappers.InfinispanWrapper.put(InfinispanWrapper.java:245)
	at org.radargun.cachewrappers.InfinispanExplicitLockingWrapper.put(InfinispanExplicitLockingWrapper.java:74)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.put(DataGridDecorator.java:85)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:484)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:333)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
2013-10-08 19:25:36,310 [Stressor-3] WARN  [com.arjuna.ats.arjuna] ARJUNA012125: TwoPhaseCoordinator.beforeCompletion - failed for SynchronizationImple< 0:ffff7f000001:886a:52544ac9:41525, SynchronizationAdapter{localTransaction=LocalTransaction{remoteLockedNodes=null, isMarkedForRollback=false, lockedKeys=null, backupKeyLocks=null, topologyId=6, isFromStateTransfer=false} org.infinispan.transaction.synchronization.SyncLocalTransaction@20a92} org.infinispan.transaction.synchronization.SynchronizationAdapter@20ab1 >
org.infinispan.CacheException: Could not prepare. 
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.beforeCompletion(SynchronizationAdapter.java:70)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.beforeCompletion(SynchronizationImple.java:76)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.beforeCompletion(TwoPhaseCoordinator.java:273)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:93)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.infinispan.CacheImpl.executeCommandAndCommitIfNeeded(CacheImpl.java:1196)
	at org.infinispan.CacheImpl.putInternal(CacheImpl.java:783)
	at org.infinispan.CacheImpl.put(CacheImpl.java:777)
	at org.infinispan.CacheImpl.put(CacheImpl.java:771)
	at org.infinispan.CacheSupport.put(CacheSupport.java:53)
	at org.radargun.cachewrappers.InfinispanWrapper.put(InfinispanWrapper.java:245)
	at org.radargun.cachewrappers.InfinispanExplicitLockingWrapper.put(InfinispanExplicitLockingWrapper.java:74)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.put(DataGridDecorator.java:85)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:484)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:333)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
Caused by: javax.transaction.xa.XAException
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:161)
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:123)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.beforeCompletion(SynchronizationAdapter.java:68)
	... 34 more
2013-10-08 19:25:36,307 [Stressor-1] ERROR [org.infinispan.transaction.TransactionCoordinator] Error while processing prepare
org.infinispan.remoting.transport.jgroups.SuspectException: Suspected member: deimos-esw-53962
	at org.infinispan.remoting.transport.AbstractTransport.parseResponseAndAddToResponseList(AbstractTransport.java:105)
	at org.infinispan.remoting.transport.jgroups.JGroupsTransport.invokeRemotely(JGroupsTransport.java:541)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:169)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:190)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:247)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:234)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:229)
	at org.infinispan.remoting.rpc.RpcManagerImpl.broadcastRpcCommand(RpcManagerImpl.java:208)
	at org.infinispan.interceptors.ReplicationInterceptor.broadcastPrepare(ReplicationInterceptor.java:109)
	at org.infinispan.interceptors.ReplicationInterceptor.visitPrepareCommand(ReplicationInterceptor.java:101)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.DeadlockDetectingInterceptor.visitPrepareCommand(DeadlockDetectingInterceptor.java:107)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.EntryWrappingInterceptor.visitPrepareCommand(EntryWrappingInterceptor.java:106)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.locking.AbstractTxLockingInterceptor.invokeNextAndCommitIf1Pc(AbstractTxLockingInterceptor.java:108)
	at org.infinispan.interceptors.locking.OptimisticLockingInterceptor.visitPrepareCommand(OptimisticLockingInterceptor.java:135)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.NotificationInterceptor.visitPrepareCommand(NotificationInterceptor.java:58)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.TxInterceptor.invokeNextInterceptorAndVerifyTransaction(TxInterceptor.java:128)
	at org.infinispan.interceptors.TxInterceptor.visitPrepareCommand(TxInterceptor.java:115)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitPrepareCommand(AbstractVisitor.java:126)
	at org.infinispan.statetransfer.TransactionSynchronizerInterceptor.visitPrepareCommand(TransactionSynchronizerInterceptor.java:61)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTopologyAffectedCommand(StateTransferInterceptor.java:216)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTxCommand(StateTransferInterceptor.java:189)
	at org.infinispan.statetransfer.StateTransferInterceptor.visitPrepareCommand(StateTransferInterceptor.java:93)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitPrepareCommand(AbstractVisitor.java:126)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleAll(InvocationContextInterceptor.java:128)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleDefault(InvocationContextInterceptor.java:92)
	at org.infinispan.commands.AbstractVisitor.visitPrepareCommand(AbstractVisitor.java:126)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.InterceptorChain.invoke(InterceptorChain.java:343)
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:141)
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:123)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.beforeCompletion(SynchronizationAdapter.java:68)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.beforeCompletion(SynchronizationImple.java:76)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.beforeCompletion(TwoPhaseCoordinator.java:273)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:93)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.infinispan.CacheImpl.executeCommandAndCommitIfNeeded(CacheImpl.java:1196)
	at org.infinispan.CacheImpl.putInternal(CacheImpl.java:783)
	at org.infinispan.CacheImpl.put(CacheImpl.java:777)
	at org.infinispan.CacheImpl.put(CacheImpl.java:771)
	at org.infinispan.CacheSupport.put(CacheSupport.java:53)
	at org.radargun.cachewrappers.InfinispanWrapper.put(InfinispanWrapper.java:245)
	at org.radargun.cachewrappers.InfinispanExplicitLockingWrapper.put(InfinispanExplicitLockingWrapper.java:74)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.put(DataGridDecorator.java:85)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:484)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:333)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
2013-10-08 19:25:36,314 [Stressor-3] WARN  [org.infinispan.CacheImpl] ISPN000160: Could not complete injected transaction.
javax.transaction.RollbackException: ARJUNA016053: Could not commit transaction.
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1177)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.infinispan.CacheImpl.executeCommandAndCommitIfNeeded(CacheImpl.java:1196)
	at org.infinispan.CacheImpl.putInternal(CacheImpl.java:783)
	at org.infinispan.CacheImpl.put(CacheImpl.java:777)
	at org.infinispan.CacheImpl.put(CacheImpl.java:771)
	at org.infinispan.CacheSupport.put(CacheSupport.java:53)
	at org.radargun.cachewrappers.InfinispanWrapper.put(InfinispanWrapper.java:245)
	at org.radargun.cachewrappers.InfinispanExplicitLockingWrapper.put(InfinispanExplicitLockingWrapper.java:74)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.put(DataGridDecorator.java:85)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:484)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:333)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
Caused by: org.infinispan.CacheException: Could not prepare. 
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.beforeCompletion(SynchronizationAdapter.java:70)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.beforeCompletion(SynchronizationImple.java:76)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.beforeCompletion(TwoPhaseCoordinator.java:273)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:93)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	... 29 more
Caused by: javax.transaction.xa.XAException
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:161)
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:123)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.beforeCompletion(SynchronizationAdapter.java:68)
	... 34 more
2013-10-08 19:25:36,312 [Stressor-2] WARN  [com.arjuna.ats.arjuna] ARJUNA012125: TwoPhaseCoordinator.beforeCompletion - failed for SynchronizationImple< 0:ffff7f000001:886a:52544ac9:41523, SynchronizationAdapter{localTransaction=LocalTransaction{remoteLockedNodes=null, isMarkedForRollback=false, lockedKeys=null, backupKeyLocks=null, topologyId=6, isFromStateTransfer=false} org.infinispan.transaction.synchronization.SyncLocalTransaction@20a91} org.infinispan.transaction.synchronization.SynchronizationAdapter@20ab0 >
org.infinispan.CacheException: Could not prepare. 
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.beforeCompletion(SynchronizationAdapter.java:70)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.beforeCompletion(SynchronizationImple.java:76)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.beforeCompletion(TwoPhaseCoordinator.java:273)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:93)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.infinispan.CacheImpl.executeCommandAndCommitIfNeeded(CacheImpl.java:1196)
	at org.infinispan.CacheImpl.putInternal(CacheImpl.java:783)
	at org.infinispan.CacheImpl.put(CacheImpl.java:777)
	at org.infinispan.CacheImpl.put(CacheImpl.java:771)
	at org.infinispan.CacheSupport.put(CacheSupport.java:53)
	at org.radargun.cachewrappers.InfinispanWrapper.put(InfinispanWrapper.java:245)
	at org.radargun.cachewrappers.InfinispanExplicitLockingWrapper.put(InfinispanExplicitLockingWrapper.java:74)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.put(DataGridDecorator.java:85)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:484)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:333)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
Caused by: javax.transaction.xa.XAException
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:161)
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:123)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.beforeCompletion(SynchronizationAdapter.java:68)
	... 34 more
2013-10-08 19:25:36,317 [Stressor-3] WARN  [pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator] Exception in underlying cache wrapper
2013-10-08 19:25:36,316 [Stressor-1] WARN  [com.arjuna.ats.arjuna] ARJUNA012125: TwoPhaseCoordinator.beforeCompletion - failed for SynchronizationImple< 0:ffff7f000001:886a:52544ac9:41521, SynchronizationAdapter{localTransaction=LocalTransaction{remoteLockedNodes=null, isMarkedForRollback=false, lockedKeys=null, backupKeyLocks=null, topologyId=6, isFromStateTransfer=false} org.infinispan.transaction.synchronization.SyncLocalTransaction@20a90} org.infinispan.transaction.synchronization.SynchronizationAdapter@20aaf >
org.infinispan.CacheException: Could not prepare. 
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.beforeCompletion(SynchronizationAdapter.java:70)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.beforeCompletion(SynchronizationImple.java:76)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.beforeCompletion(TwoPhaseCoordinator.java:273)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:93)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.infinispan.CacheImpl.executeCommandAndCommitIfNeeded(CacheImpl.java:1196)
	at org.infinispan.CacheImpl.putInternal(CacheImpl.java:783)
	at org.infinispan.CacheImpl.put(CacheImpl.java:777)
	at org.infinispan.CacheImpl.put(CacheImpl.java:771)
	at org.infinispan.CacheSupport.put(CacheSupport.java:53)
	at org.radargun.cachewrappers.InfinispanWrapper.put(InfinispanWrapper.java:245)
	at org.radargun.cachewrappers.InfinispanExplicitLockingWrapper.put(InfinispanExplicitLockingWrapper.java:74)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.put(DataGridDecorator.java:85)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:484)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:333)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
Caused by: javax.transaction.xa.XAException
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:161)
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:123)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.beforeCompletion(SynchronizationAdapter.java:68)
	... 34 more
2013-10-08 19:25:36,320 [Stressor-2] WARN  [org.infinispan.CacheImpl] ISPN000160: Could not complete injected transaction.
javax.transaction.RollbackException: ARJUNA016053: Could not commit transaction.
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1177)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.infinispan.CacheImpl.executeCommandAndCommitIfNeeded(CacheImpl.java:1196)
	at org.infinispan.CacheImpl.putInternal(CacheImpl.java:783)
	at org.infinispan.CacheImpl.put(CacheImpl.java:777)
	at org.infinispan.CacheImpl.put(CacheImpl.java:771)
	at org.infinispan.CacheSupport.put(CacheSupport.java:53)
	at org.radargun.cachewrappers.InfinispanWrapper.put(InfinispanWrapper.java:245)
	at org.radargun.cachewrappers.InfinispanExplicitLockingWrapper.put(InfinispanExplicitLockingWrapper.java:74)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.put(DataGridDecorator.java:85)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:484)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:333)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
Caused by: org.infinispan.CacheException: Could not prepare. 
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.beforeCompletion(SynchronizationAdapter.java:70)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.beforeCompletion(SynchronizationImple.java:76)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.beforeCompletion(TwoPhaseCoordinator.java:273)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:93)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	... 29 more
Caused by: javax.transaction.xa.XAException
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:161)
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:123)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.beforeCompletion(SynchronizationAdapter.java:68)
	... 34 more
2013-10-08 19:25:36,320 [Stressor-3] WARN  [pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository] Will retry (attemp 2) failed transaction: pt.ist.fenixframework.backend.jvstm.repository.PersistenceException: Exception in underlying cache wrapper
2013-10-08 19:25:36,324 [Stressor-2] WARN  [pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator] Exception in underlying cache wrapper
2013-10-08 19:25:36,323 [Stressor-1] WARN  [org.infinispan.CacheImpl] ISPN000160: Could not complete injected transaction.
javax.transaction.RollbackException: ARJUNA016053: Could not commit transaction.
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1177)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.infinispan.CacheImpl.executeCommandAndCommitIfNeeded(CacheImpl.java:1196)
	at org.infinispan.CacheImpl.putInternal(CacheImpl.java:783)
	at org.infinispan.CacheImpl.put(CacheImpl.java:777)
	at org.infinispan.CacheImpl.put(CacheImpl.java:771)
	at org.infinispan.CacheSupport.put(CacheSupport.java:53)
	at org.radargun.cachewrappers.InfinispanWrapper.put(InfinispanWrapper.java:245)
	at org.radargun.cachewrappers.InfinispanExplicitLockingWrapper.put(InfinispanExplicitLockingWrapper.java:74)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.put(DataGridDecorator.java:85)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:484)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:333)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
Caused by: org.infinispan.CacheException: Could not prepare. 
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.beforeCompletion(SynchronizationAdapter.java:70)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.beforeCompletion(SynchronizationImple.java:76)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.beforeCompletion(TwoPhaseCoordinator.java:273)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:93)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	... 29 more
Caused by: javax.transaction.xa.XAException
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:161)
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:123)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.beforeCompletion(SynchronizationAdapter.java:68)
	... 34 more
2013-10-08 19:25:36,325 [Stressor-2] WARN  [pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository] Will retry (attemp 2) failed transaction: pt.ist.fenixframework.backend.jvstm.repository.PersistenceException: Exception in underlying cache wrapper
2013-10-08 19:25:36,327 [Stressor-1] WARN  [pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator] Exception in underlying cache wrapper
2013-10-08 19:25:36,328 [Stressor-1] WARN  [pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository] Will retry (attemp 2) failed transaction: pt.ist.fenixframework.backend.jvstm.repository.PersistenceException: Exception in underlying cache wrapper
2013-10-08 19:25:36,352 [Incoming-4,deimos-esw-35246] INFO  [org.infinispan.remoting.transport.jgroups.JGroupsTransport] ISPN000094: Received new cluster view: [deimos-esw-35246|8] [deimos-esw-35246, deimos-esw-50886, deimos-esw-40168, deimos-esw-54141, deimos-esw-26732, deimos-esw-14021, deimos-esw-46759, deimos-esw-55645, deimos-esw-40956, deimos-esw-3405, deimos-esw-5411]
2013-10-08 19:25:36,352 [Stressor-2] ERROR [org.infinispan.interceptors.InvocationContextInterceptor] ISPN000136: Execution error
org.infinispan.remoting.transport.jgroups.SuspectException: Suspected member: deimos-esw-53962
	at org.infinispan.remoting.transport.AbstractTransport.parseResponseAndAddToResponseList(AbstractTransport.java:105)
	at org.infinispan.remoting.transport.jgroups.JGroupsTransport.invokeRemotely(JGroupsTransport.java:541)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:169)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:190)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:247)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:234)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:229)
	at org.infinispan.remoting.rpc.RpcManagerImpl.broadcastRpcCommand(RpcManagerImpl.java:208)
	at org.infinispan.interceptors.ReplicationInterceptor.broadcastPrepare(ReplicationInterceptor.java:109)
	at org.infinispan.interceptors.ReplicationInterceptor.visitPrepareCommand(ReplicationInterceptor.java:101)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.DeadlockDetectingInterceptor.visitPrepareCommand(DeadlockDetectingInterceptor.java:107)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.EntryWrappingInterceptor.visitPrepareCommand(EntryWrappingInterceptor.java:106)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.locking.AbstractTxLockingInterceptor.invokeNextAndCommitIf1Pc(AbstractTxLockingInterceptor.java:108)
	at org.infinispan.interceptors.locking.OptimisticLockingInterceptor.visitPrepareCommand(OptimisticLockingInterceptor.java:135)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.NotificationInterceptor.visitPrepareCommand(NotificationInterceptor.java:58)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.TxInterceptor.invokeNextInterceptorAndVerifyTransaction(TxInterceptor.java:128)
	at org.infinispan.interceptors.TxInterceptor.visitPrepareCommand(TxInterceptor.java:115)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitPrepareCommand(AbstractVisitor.java:126)
	at org.infinispan.statetransfer.TransactionSynchronizerInterceptor.visitPrepareCommand(TransactionSynchronizerInterceptor.java:61)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTopologyAffectedCommand(StateTransferInterceptor.java:216)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTxCommand(StateTransferInterceptor.java:189)
	at org.infinispan.statetransfer.StateTransferInterceptor.visitPrepareCommand(StateTransferInterceptor.java:93)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitPrepareCommand(AbstractVisitor.java:126)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleAll(InvocationContextInterceptor.java:128)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleDefault(InvocationContextInterceptor.java:92)
	at org.infinispan.commands.AbstractVisitor.visitPrepareCommand(AbstractVisitor.java:126)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.InterceptorChain.invoke(InterceptorChain.java:343)
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:141)
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:123)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.beforeCompletion(SynchronizationAdapter.java:68)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.beforeCompletion(SynchronizationImple.java:76)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.beforeCompletion(TwoPhaseCoordinator.java:273)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:93)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.infinispan.CacheImpl.executeCommandAndCommitIfNeeded(CacheImpl.java:1196)
	at org.infinispan.CacheImpl.putInternal(CacheImpl.java:783)
	at org.infinispan.CacheImpl.put(CacheImpl.java:777)
	at org.infinispan.CacheImpl.put(CacheImpl.java:771)
	at org.infinispan.CacheSupport.put(CacheSupport.java:53)
	at org.radargun.cachewrappers.InfinispanWrapper.put(InfinispanWrapper.java:245)
	at org.radargun.cachewrappers.InfinispanExplicitLockingWrapper.put(InfinispanExplicitLockingWrapper.java:74)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.put(DataGridDecorator.java:85)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:471)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:333)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
2013-10-08 19:25:36,352 [Stressor-1] ERROR [org.infinispan.interceptors.InvocationContextInterceptor] ISPN000136: Execution error
org.infinispan.remoting.transport.jgroups.SuspectException: Suspected member: deimos-esw-53962
	at org.infinispan.remoting.transport.AbstractTransport.parseResponseAndAddToResponseList(AbstractTransport.java:105)
	at org.infinispan.remoting.transport.jgroups.JGroupsTransport.invokeRemotely(JGroupsTransport.java:541)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:169)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:190)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:247)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:234)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:229)
	at org.infinispan.remoting.rpc.RpcManagerImpl.broadcastRpcCommand(RpcManagerImpl.java:208)
	at org.infinispan.interceptors.ReplicationInterceptor.broadcastPrepare(ReplicationInterceptor.java:109)
	at org.infinispan.interceptors.ReplicationInterceptor.visitPrepareCommand(ReplicationInterceptor.java:101)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.DeadlockDetectingInterceptor.visitPrepareCommand(DeadlockDetectingInterceptor.java:107)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.EntryWrappingInterceptor.visitPrepareCommand(EntryWrappingInterceptor.java:106)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.locking.AbstractTxLockingInterceptor.invokeNextAndCommitIf1Pc(AbstractTxLockingInterceptor.java:108)
	at org.infinispan.interceptors.locking.OptimisticLockingInterceptor.visitPrepareCommand(OptimisticLockingInterceptor.java:135)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.NotificationInterceptor.visitPrepareCommand(NotificationInterceptor.java:58)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.TxInterceptor.invokeNextInterceptorAndVerifyTransaction(TxInterceptor.java:128)
	at org.infinispan.interceptors.TxInterceptor.visitPrepareCommand(TxInterceptor.java:115)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitPrepareCommand(AbstractVisitor.java:126)
	at org.infinispan.statetransfer.TransactionSynchronizerInterceptor.visitPrepareCommand(TransactionSynchronizerInterceptor.java:61)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTopologyAffectedCommand(StateTransferInterceptor.java:216)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTxCommand(StateTransferInterceptor.java:189)
	at org.infinispan.statetransfer.StateTransferInterceptor.visitPrepareCommand(StateTransferInterceptor.java:93)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitPrepareCommand(AbstractVisitor.java:126)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleAll(InvocationContextInterceptor.java:128)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleDefault(InvocationContextInterceptor.java:92)
	at org.infinispan.commands.AbstractVisitor.visitPrepareCommand(AbstractVisitor.java:126)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.InterceptorChain.invoke(InterceptorChain.java:343)
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:141)
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:123)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.beforeCompletion(SynchronizationAdapter.java:68)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.beforeCompletion(SynchronizationImple.java:76)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.beforeCompletion(TwoPhaseCoordinator.java:273)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:93)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.infinispan.CacheImpl.executeCommandAndCommitIfNeeded(CacheImpl.java:1196)
	at org.infinispan.CacheImpl.putInternal(CacheImpl.java:783)
	at org.infinispan.CacheImpl.put(CacheImpl.java:777)
	at org.infinispan.CacheImpl.put(CacheImpl.java:771)
	at org.infinispan.CacheSupport.put(CacheSupport.java:53)
	at org.radargun.cachewrappers.InfinispanWrapper.put(InfinispanWrapper.java:245)
	at org.radargun.cachewrappers.InfinispanExplicitLockingWrapper.put(InfinispanExplicitLockingWrapper.java:74)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.put(DataGridDecorator.java:85)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:471)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:333)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
2013-10-08 19:25:36,355 [Stressor-2] ERROR [org.infinispan.transaction.TransactionCoordinator] Error while processing prepare
org.infinispan.remoting.transport.jgroups.SuspectException: Suspected member: deimos-esw-53962
	at org.infinispan.remoting.transport.AbstractTransport.parseResponseAndAddToResponseList(AbstractTransport.java:105)
	at org.infinispan.remoting.transport.jgroups.JGroupsTransport.invokeRemotely(JGroupsTransport.java:541)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:169)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:190)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:247)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:234)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:229)
	at org.infinispan.remoting.rpc.RpcManagerImpl.broadcastRpcCommand(RpcManagerImpl.java:208)
	at org.infinispan.interceptors.ReplicationInterceptor.broadcastPrepare(ReplicationInterceptor.java:109)
	at org.infinispan.interceptors.ReplicationInterceptor.visitPrepareCommand(ReplicationInterceptor.java:101)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.DeadlockDetectingInterceptor.visitPrepareCommand(DeadlockDetectingInterceptor.java:107)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.EntryWrappingInterceptor.visitPrepareCommand(EntryWrappingInterceptor.java:106)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.locking.AbstractTxLockingInterceptor.invokeNextAndCommitIf1Pc(AbstractTxLockingInterceptor.java:108)
	at org.infinispan.interceptors.locking.OptimisticLockingInterceptor.visitPrepareCommand(OptimisticLockingInterceptor.java:135)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.NotificationInterceptor.visitPrepareCommand(NotificationInterceptor.java:58)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.TxInterceptor.invokeNextInterceptorAndVerifyTransaction(TxInterceptor.java:128)
	at org.infinispan.interceptors.TxInterceptor.visitPrepareCommand(TxInterceptor.java:115)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitPrepareCommand(AbstractVisitor.java:126)
	at org.infinispan.statetransfer.TransactionSynchronizerInterceptor.visitPrepareCommand(TransactionSynchronizerInterceptor.java:61)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTopologyAffectedCommand(StateTransferInterceptor.java:216)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTxCommand(StateTransferInterceptor.java:189)
	at org.infinispan.statetransfer.StateTransferInterceptor.visitPrepareCommand(StateTransferInterceptor.java:93)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitPrepareCommand(AbstractVisitor.java:126)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleAll(InvocationContextInterceptor.java:128)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleDefault(InvocationContextInterceptor.java:92)
	at org.infinispan.commands.AbstractVisitor.visitPrepareCommand(AbstractVisitor.java:126)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.InterceptorChain.invoke(InterceptorChain.java:343)
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:141)
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:123)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.beforeCompletion(SynchronizationAdapter.java:68)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.beforeCompletion(SynchronizationImple.java:76)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.beforeCompletion(TwoPhaseCoordinator.java:273)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:93)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.infinispan.CacheImpl.executeCommandAndCommitIfNeeded(CacheImpl.java:1196)
	at org.infinispan.CacheImpl.putInternal(CacheImpl.java:783)
	at org.infinispan.CacheImpl.put(CacheImpl.java:777)
	at org.infinispan.CacheImpl.put(CacheImpl.java:771)
	at org.infinispan.CacheSupport.put(CacheSupport.java:53)
	at org.radargun.cachewrappers.InfinispanWrapper.put(InfinispanWrapper.java:245)
	at org.radargun.cachewrappers.InfinispanExplicitLockingWrapper.put(InfinispanExplicitLockingWrapper.java:74)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.put(DataGridDecorator.java:85)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:471)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:333)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
2013-10-08 19:25:36,359 [Stressor-1] ERROR [org.infinispan.transaction.TransactionCoordinator] Error while processing prepare
org.infinispan.remoting.transport.jgroups.SuspectException: Suspected member: deimos-esw-53962
	at org.infinispan.remoting.transport.AbstractTransport.parseResponseAndAddToResponseList(AbstractTransport.java:105)
	at org.infinispan.remoting.transport.jgroups.JGroupsTransport.invokeRemotely(JGroupsTransport.java:541)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:169)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:190)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:247)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:234)
	at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:229)
	at org.infinispan.remoting.rpc.RpcManagerImpl.broadcastRpcCommand(RpcManagerImpl.java:208)
	at org.infinispan.interceptors.ReplicationInterceptor.broadcastPrepare(ReplicationInterceptor.java:109)
	at org.infinispan.interceptors.ReplicationInterceptor.visitPrepareCommand(ReplicationInterceptor.java:101)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.DeadlockDetectingInterceptor.visitPrepareCommand(DeadlockDetectingInterceptor.java:107)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.EntryWrappingInterceptor.visitPrepareCommand(EntryWrappingInterceptor.java:106)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.locking.AbstractTxLockingInterceptor.invokeNextAndCommitIf1Pc(AbstractTxLockingInterceptor.java:108)
	at org.infinispan.interceptors.locking.OptimisticLockingInterceptor.visitPrepareCommand(OptimisticLockingInterceptor.java:135)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.NotificationInterceptor.visitPrepareCommand(NotificationInterceptor.java:58)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.TxInterceptor.invokeNextInterceptorAndVerifyTransaction(TxInterceptor.java:128)
	at org.infinispan.interceptors.TxInterceptor.visitPrepareCommand(TxInterceptor.java:115)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitPrepareCommand(AbstractVisitor.java:126)
	at org.infinispan.statetransfer.TransactionSynchronizerInterceptor.visitPrepareCommand(TransactionSynchronizerInterceptor.java:61)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTopologyAffectedCommand(StateTransferInterceptor.java:216)
	at org.infinispan.statetransfer.StateTransferInterceptor.handleTxCommand(StateTransferInterceptor.java:189)
	at org.infinispan.statetransfer.StateTransferInterceptor.visitPrepareCommand(StateTransferInterceptor.java:93)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.base.CommandInterceptor.handleDefault(CommandInterceptor.java:132)
	at org.infinispan.commands.AbstractVisitor.visitPrepareCommand(AbstractVisitor.java:126)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.base.CommandInterceptor.invokeNextInterceptor(CommandInterceptor.java:118)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleAll(InvocationContextInterceptor.java:128)
	at org.infinispan.interceptors.InvocationContextInterceptor.handleDefault(InvocationContextInterceptor.java:92)
	at org.infinispan.commands.AbstractVisitor.visitPrepareCommand(AbstractVisitor.java:126)
	at org.infinispan.commands.tx.PrepareCommand.acceptVisitor(PrepareCommand.java:124)
	at org.infinispan.interceptors.InterceptorChain.invoke(InterceptorChain.java:343)
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:141)
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:123)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.beforeCompletion(SynchronizationAdapter.java:68)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.beforeCompletion(SynchronizationImple.java:76)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.beforeCompletion(TwoPhaseCoordinator.java:273)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:93)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.infinispan.CacheImpl.executeCommandAndCommitIfNeeded(CacheImpl.java:1196)
	at org.infinispan.CacheImpl.putInternal(CacheImpl.java:783)
	at org.infinispan.CacheImpl.put(CacheImpl.java:777)
	at org.infinispan.CacheImpl.put(CacheImpl.java:771)
	at org.infinispan.CacheSupport.put(CacheSupport.java:53)
	at org.radargun.cachewrappers.InfinispanWrapper.put(InfinispanWrapper.java:245)
	at org.radargun.cachewrappers.InfinispanExplicitLockingWrapper.put(InfinispanExplicitLockingWrapper.java:74)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.put(DataGridDecorator.java:85)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:471)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:333)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
2013-10-08 19:25:36,663 [hz._hzInstance_1_FenixFrameworkGroup.HealthMonitor] INFO  [com.hazelcast.util.HealthMonitor] [127.0.0.1]:5701 [FenixFrameworkGroup] 
memory used=4.0G, free=635.4M, total=4.6G, max=4.7G, used/total=86.54% used/max=85.29%
cpu process-load=1.00%, system-load=5.00%, system-loadaverage=609.00%
2013-10-08 19:25:37,392 [Stressor-2] WARN  [com.arjuna.ats.arjuna] ARJUNA012125: TwoPhaseCoordinator.beforeCompletion - failed for SynchronizationImple< 0:ffff7f000001:886a:52544ac9:41529, SynchronizationAdapter{localTransaction=LocalTransaction{remoteLockedNodes=null, isMarkedForRollback=false, lockedKeys=null, backupKeyLocks=null, topologyId=6, isFromStateTransfer=false} org.infinispan.transaction.synchronization.SyncLocalTransaction@20a94} org.infinispan.transaction.synchronization.SynchronizationAdapter@20ab3 >
org.infinispan.CacheException: Could not prepare. 
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.beforeCompletion(SynchronizationAdapter.java:70)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.beforeCompletion(SynchronizationImple.java:76)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.beforeCompletion(TwoPhaseCoordinator.java:273)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:93)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.infinispan.CacheImpl.executeCommandAndCommitIfNeeded(CacheImpl.java:1196)
	at org.infinispan.CacheImpl.putInternal(CacheImpl.java:783)
	at org.infinispan.CacheImpl.put(CacheImpl.java:777)
	at org.infinispan.CacheImpl.put(CacheImpl.java:771)
	at org.infinispan.CacheSupport.put(CacheSupport.java:53)
	at org.radargun.cachewrappers.InfinispanWrapper.put(InfinispanWrapper.java:245)
	at org.radargun.cachewrappers.InfinispanExplicitLockingWrapper.put(InfinispanExplicitLockingWrapper.java:74)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.put(DataGridDecorator.java:85)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:471)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:333)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
Caused by: javax.transaction.xa.XAException
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:161)
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:123)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.beforeCompletion(SynchronizationAdapter.java:68)
	... 34 more
2013-10-08 19:25:37,393 [Stressor-1] WARN  [com.arjuna.ats.arjuna] ARJUNA012125: TwoPhaseCoordinator.beforeCompletion - failed for SynchronizationImple< 0:ffff7f000001:886a:52544ac9:4152b, SynchronizationAdapter{localTransaction=LocalTransaction{remoteLockedNodes=null, isMarkedForRollback=false, lockedKeys=null, backupKeyLocks=null, topologyId=6, isFromStateTransfer=false} org.infinispan.transaction.synchronization.SyncLocalTransaction@20a95} org.infinispan.transaction.synchronization.SynchronizationAdapter@20ab4 >
org.infinispan.CacheException: Could not prepare. 
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.beforeCompletion(SynchronizationAdapter.java:70)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.beforeCompletion(SynchronizationImple.java:76)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.beforeCompletion(TwoPhaseCoordinator.java:273)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:93)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.infinispan.CacheImpl.executeCommandAndCommitIfNeeded(CacheImpl.java:1196)
	at org.infinispan.CacheImpl.putInternal(CacheImpl.java:783)
	at org.infinispan.CacheImpl.put(CacheImpl.java:777)
	at org.infinispan.CacheImpl.put(CacheImpl.java:771)
	at org.infinispan.CacheSupport.put(CacheSupport.java:53)
	at org.radargun.cachewrappers.InfinispanWrapper.put(InfinispanWrapper.java:245)
	at org.radargun.cachewrappers.InfinispanExplicitLockingWrapper.put(InfinispanExplicitLockingWrapper.java:74)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.put(DataGridDecorator.java:85)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:471)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:333)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
Caused by: javax.transaction.xa.XAException
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:161)
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:123)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.beforeCompletion(SynchronizationAdapter.java:68)
	... 34 more
2013-10-08 19:25:37,394 [Stressor-2] WARN  [org.infinispan.CacheImpl] ISPN000160: Could not complete injected transaction.
javax.transaction.RollbackException: ARJUNA016053: Could not commit transaction.
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1177)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.infinispan.CacheImpl.executeCommandAndCommitIfNeeded(CacheImpl.java:1196)
	at org.infinispan.CacheImpl.putInternal(CacheImpl.java:783)
	at org.infinispan.CacheImpl.put(CacheImpl.java:777)
	at org.infinispan.CacheImpl.put(CacheImpl.java:771)
	at org.infinispan.CacheSupport.put(CacheSupport.java:53)
	at org.radargun.cachewrappers.InfinispanWrapper.put(InfinispanWrapper.java:245)
	at org.radargun.cachewrappers.InfinispanExplicitLockingWrapper.put(InfinispanExplicitLockingWrapper.java:74)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.put(DataGridDecorator.java:85)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:471)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:333)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
Caused by: org.infinispan.CacheException: Could not prepare. 
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.beforeCompletion(SynchronizationAdapter.java:70)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.beforeCompletion(SynchronizationImple.java:76)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.beforeCompletion(TwoPhaseCoordinator.java:273)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:93)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	... 29 more
Caused by: javax.transaction.xa.XAException
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:161)
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:123)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.beforeCompletion(SynchronizationAdapter.java:68)
	... 34 more
2013-10-08 19:25:37,607 [Stressor-2] WARN  [pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator] Exception in underlying cache wrapper
2013-10-08 19:25:37,607 [Stressor-2] WARN  [pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository] Will retry (attemp 3) failed transaction: pt.ist.fenixframework.backend.jvstm.repository.PersistenceException: Exception in underlying cache wrapper
2013-10-08 19:25:37,608 [Stressor-1] WARN  [org.infinispan.CacheImpl] ISPN000160: Could not complete injected transaction.
javax.transaction.RollbackException: ARJUNA016053: Could not commit transaction.
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1177)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.BaseTransaction.commit(BaseTransaction.java:117)
	at org.infinispan.CacheImpl.executeCommandAndCommitIfNeeded(CacheImpl.java:1196)
	at org.infinispan.CacheImpl.putInternal(CacheImpl.java:783)
	at org.infinispan.CacheImpl.put(CacheImpl.java:777)
	at org.infinispan.CacheImpl.put(CacheImpl.java:771)
	at org.infinispan.CacheSupport.put(CacheSupport.java:53)
	at org.radargun.cachewrappers.InfinispanWrapper.put(InfinispanWrapper.java:245)
	at org.radargun.cachewrappers.InfinispanExplicitLockingWrapper.put(InfinispanExplicitLockingWrapper.java:74)
	at pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator.put(DataGridDecorator.java:85)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:471)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository$6.call(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.doWithinBackingTransactionIfNeeded(LockFreeRepository.java:333)
	at pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.persistWriteSet(LockFreeRepository.java:461)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.persistWriteSet(LockFreeTransaction.java:252)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.tryCommit(LockFreeTransaction.java:228)
	at jvstm.ReadWriteTransaction.doCommit(ReadWriteTransaction.java:150)
	at pt.ist.fenixframework.backend.jvstm.pstm.LockFreeTransaction.doCommit(LockFreeTransaction.java:199)
	at jvstm.Transaction.commitTx(Transaction.java:458)
	at jvstm.Transaction.commit(Transaction.java:362)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransaction.backendCommit(JVSTMTransaction.java:52)
	at pt.ist.fenixframework.core.AbstractTransaction.commit(AbstractTransaction.java:62)
	at pt.ist.fenixframework.backend.jvstm.JVSTMTransactionManager.backendCommit(JVSTMTransactionManager.java:81)
	at pt.ist.fenixframework.core.AbstractTransactionManager.commit(AbstractTransactionManager.java:60)
	at org.radargun.cachewrappers.FFWrapperLF.endTransaction(FFWrapperLF.java:204)
	at org.radargun.stressors.StressTestStressor$Stressor.endTransaction(StressTestStressor.java:801)
	at org.radargun.stressors.StressTestStressor$Stressor.makeRequest(StressTestStressor.java:746)
	at org.radargun.stressors.StressTestStressor$FixedSetOperationLogic.run(StressTestStressor.java:317)
	at org.radargun.stressors.StressTestStressor$Stressor.runInternal(StressTestStressor.java:651)
	at org.radargun.stressors.StressTestStressor$Stressor.run(StressTestStressor.java:635)
Caused by: org.infinispan.CacheException: Could not prepare. 
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.beforeCompletion(SynchronizationAdapter.java:70)
	at com.arjuna.ats.internal.jta.resources.arjunacore.SynchronizationImple.beforeCompletion(SynchronizationImple.java:76)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.beforeCompletion(TwoPhaseCoordinator.java:273)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:93)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:164)
	at com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple.commitAndDisassociate(TransactionImple.java:1165)
	... 29 more
Caused by: javax.transaction.xa.XAException
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:161)
	at org.infinispan.transaction.TransactionCoordinator.prepare(TransactionCoordinator.java:123)
	at org.infinispan.transaction.synchronization.SynchronizationAdapter.beforeCompletion(SynchronizationAdapter.java:68)
	... 34 more
2013-10-08 19:25:37,610 [Stressor-1] WARN  [pt.ist.fenixframework.backend.jvstm.datagrid.radargun.DataGridDecorator] Exception in underlying cache wrapper
2013-10-08 19:25:37,611 [Stressor-1] WARN  [pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository] Will retry (attemp 3) failed transaction: pt.ist.fenixframework.backend.jvstm.repository.PersistenceException: Exception in underlying cache wrapper
2013-10-08 19:25:46,667 [hz._hzInstance_1_FenixFrameworkGroup.HealthMonitor] INFO  [com.hazelcast.util.HealthMonitor] [127.0.0.1]:5701 [FenixFrameworkGroup] 
memory used=4.2G, free=444.3M, total=4.6G, max=4.7G, used/total=90.59% used/max=89.28%
cpu process-load=8.00%, system-load=63.00%, system-loadaverage=617.00%
2013-10-08 19:25:49,558 [Stressor-1] INFO  [org.radargun.stressors.StressTestStressor] Number of ops executed so far: 10000. Elapsed time: 1 mins 25 secs. Remaining: 0.000 secs. Total: 1 mins 0 secs
2013-10-08 19:25:49,566 [pool-1-thread-1] INFO  [org.radargun.stressors.StressTestStressor] Finished generating report. Test duration is: 7 mins 43 secs
2013-10-08 19:25:49,569 [pool-1-thread-1] INFO  [org.radargun.stages.StressTestStage] size info: FFWrapperLF using infinispan52, clusterSize:12, nodeIndex:0, cacheSize: -1
2013-10-08 19:25:49,580 [pool-1-thread-1] INFO  [org.radargun.Slave] Finished stage: StressTest {bulkSize=1, cacheSpecificKeyGenerator=false, commitTransactions=true, duration=1 mins 0 secs, entrySize=1000, exitBenchmarkOnSlaveFailure=false, fixedKeys=true, generateHistogramRange=false, keyGeneratorClass=org.radargun.stressors.StringKeyGenerator, keyGeneratorParam=null, loadAllKeys=false, numEntries=10000, numOfThreads=4, numRequests=10000000, numThreads=4, numberOfAttributes=10000, numberOfRequests=10000000, opsCountStatusLog=500000, poolKeys=true, preferAsyncOperations=false, removePercentage=0, replaceInvalidPercentage=40, runOnAllSlaves=false, sharedKeys=false, sizeOfAnAttribute=1000, slaves=null, transactionSize=10000, useAtomics=false, useHistogramStatistics=false, useSimpleStatistics=true, useSmartClassLoading=true, useTransactions=true, writePercentage=10, writeTxPercentage=100 }
2013-10-08 19:25:49,581 [main] INFO  [org.radargun.Slave] Ack successfully sent to the master
2013-10-08 19:25:54,115 [OOB-54,deimos-esw-35246] WARN  [org.jgroups.protocols.pbcast.NAKACK2] [JGRP00011] deimos-esw-35246: dropped message 421,739 from non-member deimos-esw-53962 (view=[deimos-esw-35246|8] [deimos-esw-35246, deimos-esw-50886, deimos-esw-40168, deimos-esw-54141, deimos-esw-26732, deimos-esw-14021, deimos-esw-46759, deimos-esw-55645, deimos-esw-40956, deimos-esw-3405, deimos-esw-5411])
2013-10-08 19:25:56,671 [hz._hzInstance_1_FenixFrameworkGroup.HealthMonitor] INFO  [com.hazelcast.util.HealthMonitor] [127.0.0.1]:5701 [FenixFrameworkGroup] 
memory used=4.0G, free=634.1M, total=4.6G, max=4.7G, used/total=86.57% used/max=85.31%
cpu process-load=3.00%, system-load=25.00%, system-loadaverage=575.00%
2013-10-08 19:25:58,141 [Incoming-3,deimos-esw-35246] INFO  [org.infinispan.remoting.transport.jgroups.JGroupsTransport] ISPN000093: Received new, MERGED cluster view: MergeView::[deimos-esw-26732|9] [deimos-esw-26732, deimos-esw-53962, deimos-esw-55645, deimos-esw-54141, deimos-esw-40168, deimos-esw-40956, deimos-esw-46759, deimos-esw-5411, deimos-esw-3405, deimos-esw-35246, deimos-esw-14021, deimos-esw-50886], subgroups=[deimos-esw-35246|8] [deimos-esw-35246, deimos-esw-50886, deimos-esw-40168, deimos-esw-54141, deimos-esw-26732, deimos-esw-14021, deimos-esw-46759, deimos-esw-55645, deimos-esw-40956, deimos-esw-3405, deimos-esw-5411], [deimos-esw-35246|7] [deimos-esw-53962]
2013-10-08 19:26:06,675 [hz._hzInstance_1_FenixFrameworkGroup.HealthMonitor] INFO  [com.hazelcast.util.HealthMonitor] [127.0.0.1]:5701 [FenixFrameworkGroup] 
memory used=4.0G, free=605.2M, total=4.6G, max=4.7G, used/total=87.18% used/max=85.92%
cpu process-load=1.00%, system-load=8.00%, system-loadaverage=510.00%
2013-10-08 19:26:15,432 [main] INFO  [org.radargun.Slave] Master shutdown!
2013-10-08 19:26:15,435 [Thread-0] INFO  [org.radargun.ShutDownHook] Slave process is being shutdown
2013-10-08 19:26:15,481 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-in-1] INFO  [com.hazelcast.nio.TcpIpConnection] [127.0.0.1]:5701 [FenixFrameworkGroup] Connection [Address[127.0.0.1]:5706] lost. Reason: java.io.EOFException[Remote socket closed!]
2013-10-08 19:26:15,483 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-in-0] INFO  [com.hazelcast.nio.TcpIpConnection] [127.0.0.1]:5701 [FenixFrameworkGroup] Connection [Address[127.0.0.1]:5705] lost. Reason: java.io.EOFException[Remote socket closed!]
2013-10-08 19:26:15,484 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-in-2] INFO  [com.hazelcast.nio.TcpIpConnection] [127.0.0.1]:5701 [FenixFrameworkGroup] Connection [Address[127.0.0.1]:5707] lost. Reason: java.io.EOFException[Remote socket closed!]
2013-10-08 19:26:15,485 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-in-0] INFO  [com.hazelcast.nio.TcpIpConnection] [127.0.0.1]:5701 [FenixFrameworkGroup] Connection [Address[127.0.0.1]:5702] lost. Reason: java.io.EOFException[Remote socket closed!]
2013-10-08 19:26:15,485 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-in-2] INFO  [com.hazelcast.nio.TcpIpConnection] [127.0.0.1]:5701 [FenixFrameworkGroup] Connection [Address[127.0.0.1]:5710] lost. Reason: java.io.EOFException[Remote socket closed!]
2013-10-08 19:26:15,488 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-in-0] INFO  [com.hazelcast.nio.TcpIpConnection] [127.0.0.1]:5701 [FenixFrameworkGroup] Connection [Address[127.0.0.1]:5708] lost. Reason: java.io.EOFException[Remote socket closed!]
2013-10-08 19:26:15,489 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-in-2] INFO  [com.hazelcast.nio.TcpIpConnection] [127.0.0.1]:5701 [FenixFrameworkGroup] Connection [Address[127.0.0.1]:5704] lost. Reason: java.io.EOFException[Remote socket closed!]
2013-10-08 19:26:15,489 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-in-1] INFO  [com.hazelcast.nio.TcpIpConnection] [127.0.0.1]:5701 [FenixFrameworkGroup] Connection [Address[127.0.0.1]:5709] lost. Reason: java.io.EOFException[Remote socket closed!]
2013-10-08 19:26:15,490 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-in-0] INFO  [com.hazelcast.nio.TcpIpConnection] [127.0.0.1]:5701 [FenixFrameworkGroup] Connection [Address[127.0.0.1]:5711] lost. Reason: java.io.EOFException[Remote socket closed!]
2013-10-08 19:26:15,490 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-in-1] INFO  [com.hazelcast.nio.TcpIpConnection] [127.0.0.1]:5701 [FenixFrameworkGroup] Connection [Address[127.0.0.1]:5712] lost. Reason: java.io.EOFException[Remote socket closed!]
2013-10-08 19:26:15,494 [hz._hzInstance_1_FenixFrameworkGroup.IO.thread-in-1] INFO  [com.hazelcast.nio.TcpIpConnection] [127.0.0.1]:5701 [FenixFrameworkGroup] Connection [Address[127.0.0.1]:5703] lost. Reason: java.io.EOFException[Remote socket closed!]
2013-10-08 19:26:15,968 [hz.ShutdownThread] INFO  [com.hazelcast.initializer] [127.0.0.1]:5701 [FenixFrameworkGroup] Destroying node initializer.
2013-10-08 19:26:15,970 [hz.ShutdownThread] INFO  [com.hazelcast.instance.Node] [127.0.0.1]:5701 [FenixFrameworkGroup] Hazelcast Shutdown is completed in 536 ms.
